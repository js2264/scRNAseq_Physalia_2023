[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "",
    "text": "This is the landing page for the “Single-cell RNA-seq analysis with R/Bioconductor” workshop, ed. 2023.\nAuthors: Jacques Serizay [aut, cre], Orr Ashenberg [aut, cre]Version: 1.0.0Modified: 2023-05-28Compiled: 2023-06-07Environment: R version 4.3.0 (2023-04-21), Bioconductor 3.17License: MIT + file LICENSECopyright: J. Serizay & O. Ashenberg\n\nThis course will introduce biologists and bioinformaticians to the field of single-cell RNA sequencing. We will cover a range of software and analysis workflows that extend over the spectrum from the best practices in the filtering scRNA-seq data\nto the downstream analysis of cell clusters and temporal ordering. This course will help the attendees gain accurate insights in pre-processing, analysis and interpretation of scRNA-seq data.\nWe will start by introducing general concepts about single-cell RNA-sequencing. From there, we will then continue to describe the main analysis steps to go from raw sequencing data to processed and usable data. We will present classical analysis workflows, their output and the possible paths to investigate downstream of this.\nThroughout the workshop, bash tools and R/Bioconductor packages will be used to analyse datasets and learn new approaches.\n\nFrom June 5 to June 9, 2023.\n\nThis course will be held online.\n\nThe course is structured in modules over five days. Each day will include formal lectures covering the key concepts required to understand scRNA-seq analysis. The remainder of each day will consist in practical hands-on sessions focusing on analysis of scRNA-seq data. These sessions will involve a combination of both mirroring exercises with the instructor to demonstrate a skill, as well as applying these skills on your own to complete individual exercises.\nDuring and after each exercise, interpretation of results will be discussed as a group.\n\nThe course will be mostly beneficial to those who have, or will shortly have, scRNA-seq data ready to analyse.\nThe material is suitable both for experimentalists who want to learn more about data-analysis as well as computational biologists who want to learn about scRNA-seq methods.\nExamples demonstrated in this course can be applied to any experimental protocol or biological system.\nThe requirements for this course are:\n\nWorking knowledge of Unix / command line interface (managing files, running programs, reading manuals!). Basic bash commands (cd, ls, ...) and CLI usage will not be covered in this course. We advice attendees to not register if they lack fundamental experience in CLI.\nProgramming experience in R (writing a function, basic I/O operations, variable types, using packages). Bioconductor experience is a plus.\nFamiliarity with next-generation sequencing data and its analyses (using alignment and quantification tools for bulk sequencing data)\n\nAt the end of this course, you should be able to:\n\nUnderstand the pros/cons of different single-cell RNA-seq methods\nProcess and QC of scRNA-seq data\nNormalize scRNA-seq data\nCorrect for batch effects\nVisualise the data and applying dimensionality reduction\nPerform cell clustering and annotation\nPerform differential gene expression analysis\nInfer cell trajectory and pseudotime, and perform temporal differential expression\n\nThroughout the course, we will also have a focus on reproducible research, documented content and interactive reports.\n\nJacques Serizay\nOrr Ashenberg"
  },
  {
    "objectID": "content/program.html",
    "href": "content/program.html",
    "title": "Program",
    "section": "",
    "text": "Classes are from:"
  },
  {
    "objectID": "content/program.html#monday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#monday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Monday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Monday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 1 – Introduction to scRNA-Seq analysis [Orr]\n\nGeneral introduction: cell atlas overviews\nComparison of bulk and single cell RNA-Seq\nOverview of available scRNA-seq technologies (10x) and experimental protocols\n\n\n\nLecture 2 - From sequencing reads to expression matrices [Jacques]\n\nscRNA-Seq processing workflow starting with choice of sequencer (NextSeq, HiSeq, MiSeq) / barcode swapping and bcl files\nOverview of Popular tools and algorithms\nCommon single-cell analyses and interpretation\nSequencing data: alignment and quality control\nIGV: Looking at cool things in alignment like where reads are, mutations, splicing\n\n\n\nLab 1 – Familiarizing yourself with the course AWS instance [Jacques]\n\nUsing RStudio\nLogging in AWS\nShell and Unix commands to navigate directories, create folders, open files\nRaw file formats\nGet data from 10x website, single cell portal, from GEO (fastqs, counts)\n\n\n\nLab 2 – From sequencing reads to expression matrices [Orr]\n\nMapping sequencing data with Cellranger\nQuality Control reports (CellRanger, dropEst, fastqc)"
  },
  {
    "objectID": "content/program.html#tuesday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#tuesday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Tuesday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Tuesday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 3 - Quality control for scRNA-Seq data [Orr]\n\nWhat CellRanger does for quality filtering\nNormalisation methods\nDoublets, empty droplets, DropletUtils\nBarcode swapping\nRegression with technical covariates\n\n\n\nLab 3 - Introduction to R/Bioconductor [Jacques]\n\nInstalling packages with CRAN and Bioconductor\nData types, data manipulation, slicing\nI/O for scRNAseq analysis in R\n\n\n\nLab 4 – scRNA-Seq data wrangling [Orr]\n\nData structure\nData filtering\nExploratory data analysis\n\n\n\nFlash talks [Everybody]"
  },
  {
    "objectID": "content/program.html#wednesday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#wednesday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Wednesday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Wednesday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 4 - Identifying cell populations [Jacques]\n\nFeature selection\nDimensionality reduction\nGraph-based clustering and other cluster methods\nAssigning cluster identity\nDifferential expression tests\n\n\n\nLab 5 – Identifying Cell Populations: dimensionality reduction, clustering and annotation [Jacques]\n\nFeature selection\nDimensional reduction\nGraph-based clustering\nMarker gene detection\nCell type annotation\nData visualization\n\n\n\nLecture 5 - Data integration and batch effect correction [Orr]\n\nBatch correction methods (regress out batch, scaling within batch, Seurat v3, MNN, Liger, Harmony, scvi, scgen)\nEvaluation methods for batch correction (ARI, average silhouette width, kBET…)\n\n\n\nLab 6 - Data integration and batch effect correction [Orr]\n\nComparison of batch correction methods\nChoosing the optimal batch correction approach"
  },
  {
    "objectID": "content/program.html#thursday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#thursday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Thursday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Thursday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 6 - Trajectories and pseudotimes [Jacques]\n\nTrajectory inference\nPopular tools and packages for trajectory analysis (https://github.com/dynverse/dynmethods#list-of-included-methods)\nPseudotime inference\nRNA velocity\nDifferential expression through pseudotime\n\n\n\nLab 7 - Inferring differentiation trajectories and pseudotime [Jacques]\n\nInfering trajectory in sperm cell lineage\nOrientating a trajectory with RNA veloctiy\nDE analysis along a trajectory\n\n\n\nLecture 7 - Advances in single-cell genomics: the epigenome [Orr]\n\n\nLab 8 - Single-cell ATAC-Seq analysis [Jacques]"
  },
  {
    "objectID": "content/program.html#friday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#friday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Friday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Friday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 8 - Advances in single-cell genomics: spatial transcriptomics [Orr]\nFriday will then be divided in two parts:\n\nMorning & afternoon (1h + 1h30): Group projects: analysing scRNA-seq data by yourself, from A to Z\nAfternoon (1h): Group presentations (10’ each group, max 5 slides: what/why/where/when/how, conclusions)\n\nHappy hour time!!"
  },
  {
    "objectID": "content/Rstudio.html",
    "href": "content/Rstudio.html",
    "title": "RStudio",
    "section": "",
    "text": "Since most of the preliminary analysis we do is on AWS, we’d like to be able to use Rtudio directly from there. To do that, simply go to the following address:\n\n\nhttp://35.89.32.86:8787\n\n\nDon’t forget, you can run a bash terminal from within RStudio! This may come handy if you want to process some data with cellranger, for example. To do this, simply click on the terminal button next on the bottom left panel. You should now be in your own ${home} directory (~)."
  },
  {
    "objectID": "content/prerequisites.html",
    "href": "content/prerequisites.html",
    "title": "Prerequisites",
    "section": "",
    "text": "The course is intended for those who have basic familiarity with Unix and the R scripting language.\nWe will also assume that you are familiar with mapping and analysing bulk RNA-seq data as well as with the commonly available computational tools."
  },
  {
    "objectID": "content/prerequisites.html#local-configuration",
    "href": "content/prerequisites.html#local-configuration",
    "title": "Prerequisites",
    "section": "Local configuration",
    "text": "Local configuration\n\nIdeally (though not strictly required), a configured SSH client (it should be already installed on Linux/Mac machines, PuTTY can be set up for Windows).\nIdeally (though not strictly required), a SSH ftp client (Forklift is excellent for Mac, although not free beyond the trial version; cyberduck can be used for Windows; FileZilla can be used for both Mac, Windows and Linux).\nComputer with high-speed internet access (no specific configuration required - everything will be performed on a remote AWS machine).\nZoom visioconference software"
  },
  {
    "objectID": "content/prerequisites.html#remote-configuration",
    "href": "content/prerequisites.html#remote-configuration",
    "title": "Prerequisites",
    "section": "Remote configuration",
    "text": "Remote configuration\nThe AWS machine is running with Ubuntu and has been set up as follows:\n## --- Clean up previous R installs\nsudo apt purge r-base* r-recommended r-cran-*\nsudo apt autoremove\nsudo apt update\nsudo apt upgrade\n\n## --- Libraries\nsudo apt update\nsudo apt install libc6 libicu60 -y \nsudo apt install -y \\\n    gcc g++ perl python3 python3-pip python-dev \\\n    automake make cmake less vim nano fort77 \\\n    wget git curl bsdtar bzip2 gfortran unzip ftp \\\n    libpng-dev libjpeg-dev \\\n    texlive-latex-base default-jre build-essential \\\n    libbz2-dev liblzma-dev libtool \\\n    libxml2 libxml2-dev zlib1g-dev \\\n    libdb-dev libglu1-mesa-dev zlib1g-dev  \\\n    libncurses5-dev libghc-zlib-dev libncurses-dev \\\n    libpcre3-dev libxml2-dev \\\n    libblas-dev libzmq3-dev libreadline-dev libssl-dev \\\n    libcurl4-openssl-dev libx11-dev libxt-dev \\\n    x11-common libcairo2-dev \\\n    libreadline6-dev libgsl0-dev \\\n    libeigen3-dev libboost-all-dev \\\n    libgtk2.0-dev xvfb xauth xfonts-base \\\n    apt-transport-https libhdf5-serial-dev \\\n    libudunits2-dev libgdal-dev libgeos-dev libproj-dev \\\n    libv8-dev \\\n    libmagick++-dev \\\n    libharfbuzz-dev libfribidi-dev \\\n    fftw3\n\n## --- R base install \nsudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'\nadd-apt-repository \"deb https://cloud.r-project.org/bin/linux/ubuntu `lsb_release -cs` -cran40/\"\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nsudo apt update\nsudo apt install r-base r-recommended r-base-core r-base-dev\nThe following packages have been installed (along with their many dependencies, of course!):\n## --- Install important R packages for single-cell RNA-seq projects\n## pak \nsudo Rscript -e 'install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch))'\n\n## CRAN packages\nsudo Rscript -e 'pak::pkg_install(c(\"tidyverse\", \"devtools\", \"umap\", \"corrplot\", \"gam\", \"ggbeeswarm\", \"ggthemes\", \"Matrix\", \"zeallot\", \"fossil\", \"rgl\", \"BiocManager\", \"Seurat\", \"rliger\", \"Signac\", \"multtest\", \"metap\"))'\n\n## Bioconductor Packages\nsudo Rscript -e 'pak::pkg_install(c(\"SingleCellExperiment\", \"scran\", \"scater\", \"batchelor\", \"DropletUtils\", \"AUCell\", \"plyranges\", \"ggraph\", \"clustree\", \"celldex\", \"SingleR\", \"slingshot\", \"tradeSeq\", \"velociraptor\", \"BUSpaRse\", \"org.Mm.eg.db\", \"org.Hs.eg.db\", \"destiny\", \"TENxPBMCData\", \"scRNAseq\", \"scDblFinder\", \"chromVAR\", \"EnsDb.Hsapiens.v75\", \"LoomExperiment\", \"biovizBase\"))'\n\n## --- Install other softwares (fastQC, samtools, cellranger and cellranger indexes, ffq)\n\n# fastqc samtools\nsudo apt install fastqc samtools python3.8\n\n# cellranger\ncd /opt/\nsudo wget -O cellranger-7.1.0.tar.gz \"https://cf.10xgenomics.com/releases/cell-exp/cellranger-7.1.0.tar.gz?Expires=1685143014&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9jZi4xMHhnZW5vbWljcy5jb20vcmVsZWFzZXMvY2VsbC1leHAvY2VsbHJhbmdlci03LjEuMC50YXIuZ3oiLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE2ODUxNDMwMTR9fX1dfQ__&Signature=aD0ZgbtDMNwI4C62fEuZ0ppBoTm-wAiQ~d9KWtWinvv5G9LdyRzJXED98eMrJg07yCHfnbCd8v7owzUVoZvDW1-pgmpOjpd2qLiaCQuaWsWGKgxJ4MtyPAl0Oi~0zRnGLwsFk1geDPxDBZVH9OBIrQsG3aNlApBxhxw4u6yYUT62PXtu2OjRQ-PieGlvH7TFbr-JjkpUpR-YEcQ6i0ORrdLxNt9HzeZX9s6s0dJ~NybRywBZI89KEoseyN6LZU13vtHl9BtPGIeA1Hwvpb2A1xsO5ueql3palHsT5Lnf7lY9QwXH4FECVAAoMCI8eP2dXHKtliJy0y~xLKVPEnSgGw__&Key-Pair-Id=APKAI7S6A5RYOXBWRPDA\"\nsudo tar -xzvf cellranger-7.1.0.tar.gz\nsudo ln -s /opt/cellranger-7.1.0/cellranger /usr/local/bin/cellranger\nsudo wget https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-mm10-2020-A.tar.gz\nsudo tar -xzvf refdata-gex-mm10-2020-A.tar.gz\n\n# ffq\nsudo apt install python3-distutils\nsudo pip install ffq\n\n# seqkit\ncd /opt/\nsudo wget -O seqkit_linux_amd64.tar.gz https://github.com/shenwei356/seqkit/releases/download/v2.4.0/seqkit_linux_amd64.tar.gz\nsudo tar -xzvf seqkit_linux_amd64.tar.gz\nsudo ln -s /opt/seqkit /usr/local/bin/seqkit\n\n# bcl2fastq\nsudo apt install alien\ncd /opt/\nwget http://support.illumina.com/content/dam/illumina-support/documents/downloads/software/bcl2fastq/bcl2fastq2-v2.17.1.14-Linux-x86_64.rpm\nsudo alien bcl2fastq2-v2.17.1.14-Linux-x86_64.rpm\nsudo dpkg -i bcl2fastq2_0v2.17.1.14-2_amd64.deb"
  },
  {
    "objectID": "content/day1/Lecture1_introduction.html",
    "href": "content/day1/Lecture1_introduction.html",
    "title": "1  Lecture 1 - Introduction to scRNAseq analysis",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/prerequisites.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\">Prerequisites</span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/day1/Lecture2_Bcl2matrix.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\"><span class='chapter-number'>2</span>  <span class='chapter-title'>Lecture 2 - From sequencing reads to expression matrices</span></span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/day1/Lecture2_Bcl2matrix.html",
    "href": "content/day1/Lecture2_Bcl2matrix.html",
    "title": "2  Lecture 2 - From sequencing reads to expression matrices",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/day1/Lecture1_introduction.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\"><span class='chapter-number'>1</span>  <span class='chapter-title'>Lecture 1 - Introduction to scRNAseq analysis</span></span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/day1/Lab1_Intro.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\"><span class='chapter-number'>3</span>  <span class='chapter-title'>Lab 1: Familiarizing yourself with the course AWS instance</span></span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/day1/Lab1_Intro.html",
    "href": "content/day1/Lab1_Intro.html",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "",
    "text": "Most of single-cell RNA-seq analysis takes place either in python or in R. Here, we focus on how to leverage R to investigate scRNAseq data. RStudio is an IDE (Integrated Development Environment, in other words: a nice graphical interface to run R-related commands).\nFor this workshop, we have installed R and RStudio on AWS. We can directly use RStudio (actually, RStudio-server since it is installed on an AWS remote server). Simply open a browser and copy-paste the following address:\n\n\nhttp://35.89.32.86:8787\n\n\nAn RStudio log in page will appear; to log in, use your user ID for both ID and password.\nNotice how when you log in Rstudio, there are multiple panels. Familiarize yourself with the different panels.\nThe interactive R console is generally found in the bottom left corner of RStudio(though it may be in another corner sometimes). All the rest (history panel, environment panel, directory explorer panel, editor panel) are extra features provided by RStudio.\n\n\n\n\n\n\nSome useful commands in R:\n\n\n\nWithin the R console, you can safely use R-dedicated commands. Do you know the most common ones? The semantics are a different from the terminal commands you may be used to…\n\n\n\nR\n\ngetwd() # equivalent of `pwd` in terminal\ndir.create('~/data/') # equivalent of `mkdir ~/data/` in terminal\nsetwd(\"~/data/\") # equivalent of `cd ~/data/` in terminal\nlist.files(\"~/data/\") # equivalent of `ls` in terminal\ndownload.file(\"...\") # equivalent of `wget ...` in terminal"
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#use-a-aws-terminal-within-rstudio",
    "href": "content/day1/Lab1_Intro.html#use-a-aws-terminal-within-rstudio",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.2 Use a AWS terminal within RStudio",
    "text": "3.2 Use a AWS terminal within RStudio\nA general issue with bioinformatic analyses stems from the fact that nobody works in the same environment:\n\nAre you working on Mac? Linux? Windows?\nDo you have a lot of computational power? Perhaps a GPU card?\nAre you connected to the Internet? With a fast connection? Are you working behind a proxy?\n\nTo ensure that we are all working in the same environment, we rely on AWS (Amazon Web Services) EC2 (Elastic Cloud 2) instances. EC2 instances are “virtual” computers to which you can connect remotely, from a local computer.\nThe instance is common for everybody. We are thus all sharing the same “computer”; this means:\n\nShared resources\nSame access to shared files\nSame access to system-wide softwares and conda environments\n\nThe easiest way for us to launch bash commands from a terminal in AWS is to do it through RStudio: You can open up a terminal directly from within RStudio as follow: go to Tools > Terminal > New terminal. This should open up a new tab in the bottom left corner (next to the R console).\n\n\n\n\n\n\nR console versus terminal:\n\n\n\nFrom here onwards, be sure you completely understand the difference between “R console” and “terminal (or shell)”. They are entirely different things, and can be both accessed within RStudio. It is crucial you understand the difference between the two to not get confused for the rest of the course."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#basic-terminal-commands",
    "href": "content/day1/Lab1_Intro.html#basic-terminal-commands",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.3 Basic terminal commands",
    "text": "3.3 Basic terminal commands\nThe same bash commands are available in AWS terminal, regardless of whether you access the terminal from RStudio or through ssh.\nOne can list files, download files, check help pages, …, just like in R.\n\nCheck the your present directory\n\n\n\n\nbash\n\npwd\n\n\n\nCheck history\n\n\n\n\nbash\n\nhistory\n\n\n\nput history into a history.txt file\n\n\n\n\nbash\n\nhistory > history.txt\n\n\n\nmake a new folder called data\n\n\n\n\nbash\n\nmkdir data\n\n\n\nGo to the new data directory\n\n\n\n\nbash\n\ncd data\n\n\n\nmove history.txt file into data directory\n\n\n\n\nbash\n\nmv ../history.txt ./\n\n\n\ncheck manual page of wget command (hit q to exit)\n\n\n\n\nbash\n\nman wget\n\n\n\ncheck specific help for cellranger command and subcommands\n\n\n\n\nbash\n\ncellranger --help\ncellranger count --help\n\n\n\nredirect wget help output into a file called cellranger-help.txt\n\n\n\n\n\nbash\n\ncellranger count --help > cellranger-help.txt\n\n\n\nDownload a file from Internet with wget\n\n\n\n\n\nbash\n\nwget https://cf.10xgenomics.com/supp/cell-exp/cellranger-tiny-bcl-1.2.0.tar.gz\n\n\n\nList all files in a folder\n\n\n\n\nbash\n\nls -l ~/Share/\n\n\n\n\n\n\n\n\nTip\n\n\n\nDownload the git repository for this course from GitHub:\n\n\n\nbash\n\ngit clone https://github.com/js2264/scRNAseq_Physalia_2023.git\n\n\nThis downloads the repository for this course to your home folder on the AWS machine.\nTo get it on your local computer (to save the lectures and exercises), go to the GitHub repo page, click on the green Code button, then Download ZIP. Beware, the download may take a significant time based on your internet connection (several hundreds MB)."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#single-cell-rna-seq-datasets",
    "href": "content/day1/Lab1_Intro.html#single-cell-rna-seq-datasets",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.4 Single-cell RNA-seq datasets",
    "text": "3.4 Single-cell RNA-seq datasets\n\n“This is a course about single-cell RNA-seq analysis, after all, so where is my data?”\n\nOk, “your” data is (most likely) yet to be sequenced! Or maybe you’re interested in digging already existing databases! I mean, who isn’t interested in this mind-blowing achievement from 10X Genomics??\nHuman Cell Atlas is probably a good place to start digging, if you are interested in mammal-related studies. For instance, let’s say I am interested in epididymis differentiation. Boom: here is an entry from the HCA focusing on epididymis: link to HCA data portal.\n\n3.4.1 Raw fastq reads from GEO\nHere is the link to the actual paper studying epididymis:An atlas of human proximal epididymis reveals cell-specific functions and distinct roles for CFTR.\n\nFind and check out the corresponding GEO entries for this study. What type of sequencing data is available?\n\n\n\n\n\n\n\nTip\n\n\n\nHere is the link to the GEO page: link.\n\n\n\nCan you find links to download the raw data from this paper?\n\nThere are several ways to find this information, e.g. ffq command line tool, or using the web-based sra-explorer page (here). You generally will need the GEO corresponding ID or SRA project ID (e.g. SRPxxxxxx…).\n\nTry to install the ffq tool from the Patcher lab.\n\n\n\n\n\n\n\nInstalling conda packages\n\n\n\nconda-based environments allow easy installs of packages such as ffq. Your (base) conda environment should be active by default, and you will only have to type:\n\npip install ffq\n\n\n\n\nCheck ffq help and try fetching metadata for the GSE ID GSE148963.\n\n\n\n\nbash\n\nffq --help\nffq -t GSE GSE148963 > GSE148963_search.txt\nhead -n 30 GSE148963_search.txt\n\n\n\nCan you find the links to raw data associated with the GSE148963 GEO ID?\n\nYou can use a grep command: grep returns the lines which match a given pattern (e.g. a link…)!\n\n\n\nbash\n\ngrep 'ftp://' GSE148963_search.txt\n\n\nAnd with a bit of sed magick…\n\n\n\nbash\n\ngrep 'ftp://' GSE148963_search.txt | sed 's,.*ftp:,ftp:,' | sed 's,\".*,,' | grep \".fastq\" > GSE148963_fastqlist.txt\n## `ffq` looks through GEO repository to fing metadata associated with the `GSE148963` entry (including downloading links)\n## grep 'ftp://' recovers the text lines that contain downloading links\n## the `sed` commands clean up the text lines\n## the `wget` command downloads locally the links listed in the generated file (GSE148963_fastqlist.txt)\n# wget -i GSE148963_fastqlist.txt ## Do not run, it would take too long...\n\n\n\nCheck the content of the reads\n\nA subset of the reads has been downloaded and put in the ~/Share/ folder. Have a look at it!\n\n\n\nbash\n\nzcat ~/Share/SRR11575369_1.fastq.gz | head -n 12\n\n\nTry and understand the structure of the fastq.gz file. What is the meaning of each line?\nHow many reads are there in the fastq.gz file? And how long are they? Can you get a summary of what is in this file? All of these questions can be quickly answered using the seqkit tool:\n\n\n\nbash\n\nseqkit --help\nseqkit stats --help\nseqkit stat ~/Share/SRR11575369_1.fq.gz\n\n\n\n3.4.2 Processed count matrices\nMany times, researchers will provide a filtered count matrix when they publish scRNAseq experiments (along with mandatory raw fastq data, of course). It’s way lighter than fastq reads, and you can go ahead with downstream analyses a lot quicker. So how do you get these matrices? Human Cell Atlas Consortium provides many processed datasets. For instance, in our case, the Leir et al study is available at the following link. GEO also hosts processed files.\n\nFind GEO-hosted processed files for the Leir et al study. \n\nYou can download some of the processed files available in GEO from the following webpage. Scrolling down to the bottom of the page, there is a box labelled “Supplementary data”. By clicking on “(custom)”, a list of extra supplementary files will appear.\n\nDownload and check the content of the count matrix, the genes and the barcodes files. \nWhat type of information does each file contain? How is it formatted? is it easily imported in R? \nHow many cells were sequenced? How many genes were counted? \nIs it easy to interpret the count matrix? Why is it in such format? \nComment on the file sizes between processed count matrix files and raw reads."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#bonus",
    "href": "content/day1/Lab1_Intro.html#bonus",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.5 Bonus",
    "text": "3.5 Bonus\nFor those of you who are already familiar with the basics, you can fast-forward through this lab and start working on scRNAseq data directly. The script in bin/prepare_Ernst.R is a template to process a publicly available scRNAseq dataset. You can start exploring it to see if you understsand the different chunks of code and their importance. All the content from this template will eventually be covered in the next labs."
  },
  {
    "objectID": "content/day1/Lab2_processingreads.html",
    "href": "content/day1/Lab2_processingreads.html",
    "title": "\n4  Lab 2: From .bcl to count matrix\n",
    "section": "",
    "text": "Navigate to your terminal in RStudio on AWS.\nGo to the cellranger mkfastq page and read the Overview.\nGo to the Terminal tab in your RStudio and take a look at the 10x samplesheet file:\n\n\n\nbash\n\ncat ~/Share/data_wrangling/cellranger-tiny-bcl-simple-1.2.0.csv\n\n\nNext, explore the contents of the sequencing directory:\n\n\n\nbash\n\nls -l Share/data_wrangling/cellranger-tiny-bcl-1.2.0\n\n\nNow we can demultiplex our bcl files by running the following command in the terminal:\n\n\n\nbash\n\ncellranger mkfastq --id tiny-bcl --run ~/Share/data_wrangling/cellranger-tiny-bcl-1.2.0 --csv ~/Share/data_wrangling/cellranger-tiny-bcl-simple-1.2.0.csv\n\n\nThe output folders can be viewed by running the ls command:\n\n\n\nbash\n\nls -l tiny-bcl/outs/fastq_path/H35KCBCXY/test_sample\n\n\nLook at the index read (I1), read 1 (R1), and read (R2) files using the command less fastq_file_name.gz. You can type q in the terminal to leave this view.\nOpen the html file tiny-bcl/outs/fastq_path/Reports/html/index.html by navigating to the file in RStudio, using the Files Tab. When you click on the file, select the option to View in Web Browser. Take some time to explore the demultiplexed outputs."
  },
  {
    "objectID": "content/day1/Lab2_processingreads.html#generating-gene-count-matrices-with-cellranger-count",
    "href": "content/day1/Lab2_processingreads.html#generating-gene-count-matrices-with-cellranger-count",
    "title": "\n4  Lab 2: From .bcl to count matrix\n",
    "section": "\n4.2 Generating gene count matrices with cellranger count\n",
    "text": "4.2 Generating gene count matrices with cellranger count\n\nGo to the cellranger count algorithm overview and read the section on Alignment (Read Trimming, Genome Alignment, MAPQ adjustment, Transcriptome Alignment, UMI Counting).\nIn the terminal run the command:\n\n\n\nbash\n\ncellranger count --id counts --transcriptome ~/Share/refdata-gex-mm10-2020-A/ --fastqs tiny-bcl/outs/fastq_path/H35KCBCXY/test_sample --sample test_sample\n\n\nWhile the count command is running, read about the format of the feature-barcode matrices.\nOnce the count command is finished running, the pipeline outputs can be viewed as follows:\n\n\n\nbash\n\nls counts/outs\n\n\nCan you locate the feature-barcode matrices? What is the difference between the raw_feature_bc_matrix and filtered_feature_bc_matrix data types?\nNow open the html file counts/outs/web_summary.html by navigating to the file in RStudio, using the Files Tab. When you click on the file, select the option to View in Web Browser. Take some time to explore the gene expression matrix outputs."
  },
  {
    "objectID": "content/day2/Lecture3_qualitycontrol.html",
    "href": "content/day2/Lecture3_qualitycontrol.html",
    "title": "5  Lecture 3 - Quality control for scRNA-Seq data",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/day1/Lab2_processingreads.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\"><span class='chapter-number'>4</span>  <span class='chapter-title'>Lab 2: From .bcl to count matrix</span></span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/day2/Lab3_Rbioc.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\"><span class='chapter-number'>6</span>  <span class='chapter-title'>Lab 3: Introduction to R/Bioconductor</span></span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#installing-packages-in-r",
    "href": "content/day2/Lab3_Rbioc.html#installing-packages-in-r",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.1 Installing packages in R\n",
    "text": "6.1 Installing packages in R\n\n\n“Hey, I’ve heard so many good things about this piece of software, it’s called ‘slingshot’? Heard of it? I really want to try it out on my dataset!!”\n\nOr, in other words: “how do I install this or that brand new cutting-edge fancy package?”\nR works with packages, available from different sources:\n\n\nCRAN, the R developer team and official package provider: CRAN (which can probably win the title of “the worst webpage ever designed that survived until 2023”).\n\nBioconductor, another package provider, with a primary focus on genomic-related packages: Bioconductor.\nOther unofficial sources, such as GitHub.\n\nLet’s start by going over package installation.\n\nInstall mgcv, HCAData and revelio packages\n\nEach of these three packages is available from a different source.\n\n\n\nR\n\ninstall.packages('mgcv')\nBiocManager::install('HCAData')\nremotes::install_github('danielschw188/revelio')\n\n\n\nCheck package help pages\n\nPackage help pages are available at different places, depending on their source. That being said, there is a place I like to go to easily find information related to most packages:\nhttps://rdrr.io/\nFor instance, check out Revelio package help pages.\n\nWhat is this package designed for?\nWhat are its main functions? What type of input does it require?"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#basic-r-and-bioconductor-classes",
    "href": "content/day2/Lab3_Rbioc.html#basic-r-and-bioconductor-classes",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.2 Basic R and Bioconductor classes",
    "text": "6.2 Basic R and Bioconductor classes\nWhile CRAN is a repository of general-purpose packages, Bioconductor is the greatest source of analytical tools, data and workflows dedicated to genomic projects in R. Read more about Bioconductor to fully understand how it builds up on top of R general features, especially with the specific classes it introduces.\nThe two main concepts behind Bioconductor’s success are the non-redundant classes of objects it provides and their inter-operability. Huber et al., Nat. Methods 2015 summarizes it well.\n\n6.2.1 Important R concepts:\n\n6.2.1.1 tibble tables:\ntibbles are built on the fundamental data.frame objects. They follow “tidy” concepts, all gathered in a common tidyverse. This set of key concepts help general data investigation and data visualization through a set of associated packages such as ggplot2.\n\n\n\nR\n\nlibrary(tidyverse)\ndat <- tibble(\n    x = 1:5, \n    y = 1, \n    z = x ^ 2 + y, \n    class = c('a', 'a', 'b', 'b', 'c')\n)\ndat\n\n\n\nImport a text file into tibbles\n\ntibbles can be created from text files (or Excel files) using the readr package (part of tidyverse)\n\n\n\nR\n\ngenes <- read_tsv('~/Share/GSM4486714_AXH009_genes.tsv', col_names = c('ID', 'Symbol'))\ngenes\n\n\n\n6.2.1.2 Handling of tibbles:\ntibbles can be readily “sliced” (i.e. selecting rows by number/name), “filtered” (i.e. selecting rows by condition) and columns can be “selected”. All these operations are performed using verbs (most of them provided by the dplyr package, part of tidyverse).\n\n\n\nR\n\nslice(genes, 1:4)\nfilter(genes, Symbol == 'CCDC67')\nfilter(genes, grepl('^CCDC.*', Symbol))\nfilter(genes, grepl('^CCDC.*', Symbol), grepl('.*5$', Symbol))\nselect(genes, 1)\nselect(genes, ID)\nselect(genes, matches('Sym.*'))\n\n\nColumns can also be quickly added/modified using the mutate verb.\n\n\n\nR\n\nmutate(genes, chr = sample(1:22, n(), replace = TRUE))\n\n\n\n6.2.1.3 |> pipe:\nActions on tibbles can be piped as a chain with |>, just like | pipes stdout as the stdin of the next command in bash. In this case, the first argument is always the output of the previous function and is ommited. Because tidyverse functions generally return a modified version of the input, pipping works remarkably well in such context.\n\n\n\nR\n\nread_tsv('~/Share/GSM4486714_AXH009_genes.tsv', col_names = c('ID', 'Symbol')) |> \n    mutate(chr = sample(1:22, n(), replace = TRUE)) |> \n    filter(chr == 2, grepl('^CCDC.*', Symbol)) |> \n    select(ID) |> \n    slice_head(n = 3)\n\n\n\n6.2.2 Important Bioconductor concepts:\n\n6.2.2.1 SummarizedExperiment class:\nThe most fundamental class used to hold the content of large-scale quantitative analyses, such as counts of RNA-seq experiments, or high-throughput cytometry experiments or proteomics experiments.\n\nMake sure you understand the structure of objects from this class. A dedicated workshop that I would recommend quickly going over is available here. Generally speaking, a SummarizedExperiment object contains matrix-like objects (the assays), with rows representing features (e.g. genes, transcripts, …) and each column representing a sample. Information specific to genes and samples are stored in “parallel” data frames, for example to store gene locations, tissue of expression, biotypes (for genes) or batch, generation date, or machine ID (for samples). On top of that, metadata are also stored in the object (to store description of a project, …).\nAn important difference with S3 list-like objects usually used in R is that most of the underlying data (organized in precisely structured \"slots\") is accessed using getter functions, rather than the familiar $ or [. Here are some important getters:\n\n\nassay(), assays(): Extrant matrix-like or list of matrix-like objects of identical dimensions. Since the objects are matrix-like, dim(), dimnames(), and 2-dimensional [, [<- methods are available.\n\ncolData(): Annotations on each column (as a DataFrame): usually, description of each sample\n\nrowData(): Annotations on each row (as a DataFrame): usually, description of each gene\n\nmetadata(): List of unstructured metadata describing the overall content of the object.\n\nLet’s dig into an example (you may need to install the airway package from Bioconductor…)\n\n\n\nR\n\nlibrary(SummarizedExperiment)\nlibrary(airway)\ndata(airway)\nairway\n\n\n\nWhat are the dimensions of the dataset? What type of quantitative data is stored? Which features are assessed?\n\n\n\n\nR\n\ndim(airway)\nrowData(airway)\ncolData(airway)\n\n\n\nCan you create a subset of the data corresponding to LRG genes in untreated samples?\n\n\n\n\nR\n\nuntreated_LRG <- airway[grepl('^LRG_', rownames(airway)), airway$dex == 'untrt']\nuntreated_LRG\n\n\n\n6.2.2.2 GenomicRanges class (a.k.a. GRanges):\nGenomicRanges are a type of IntervalRanges, they are useful to describe genomic intervals. Each entry in a GRanges object has a seqnames(), a start() and an end() coordinates, a strand(), as well as associated metadata (mcols()). They can be built from scratch using tibbles converted with makeGRangesFromDataFrame().\n\n\n\nR\n\nlibrary(GenomicRanges)\ngr <- read_tsv('~/Share/GSM4486714_AXH009_genes.tsv', col_names = c('ID', 'Symbol')) |> \n    mutate(\n        chr = sample(1:22, n(), replace = TRUE), \n        start = sample(1:1000, n(), replace = TRUE),\n        end = sample(10000:20000, n(), replace = TRUE),\n        strand = sample(c('-', '+'), n(), replace = TRUE)\n    ) |> \n    makeGRangesFromDataFrame(keep.extra.columns = TRUE)\ngr\nmcols(gr)\n\n\nJust like tidyverse in R, tidy functions are provided for GRanges by the plyranges package.\n\n\n\nR\n\nlibrary(plyranges)\ngr |> \n    filter(start < 400, end > 12000, end < 15000) |> \n    seqnames() |> \n    table()\n\n\n\nCan you find a way to easily read common input files such as bed files into GRanges?\n\n\n\n\nR\n\nlibrary(rtracklayer)\ngenes2 <- import('~/Share/GRCm39_genes.bed')\ngenes2\n\n\n\nHow would you have proceeded without rtracklayer? Check the start coordinates: what do you see? Comment on the interest of using Bioconductor.\n\n\n\n\nR\n\nlibrary(rtracklayer)\ngenes2_manual <- read_tsv('~/Share/GRCm39_genes.bed', col_names = FALSE) |> \n    drop_na() |>\n    purrr::set_names(c('chr', 'start', 'stop', 'id', 'score', 'strand')) |> \n    makeGRangesFromDataFrame(keep.extra.columns = TRUE)\ngenes2_manual\nhead(start(genes2))\nhead(start(genes2_manual))"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#cran-bioconductor-approaches-to-scrnaseq",
    "href": "content/day2/Lab3_Rbioc.html#cran-bioconductor-approaches-to-scrnaseq",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.3 CRAN & Bioconductor approaches to scRNAseq",
    "text": "6.3 CRAN & Bioconductor approaches to scRNAseq\n\n6.3.1 scRNAseq in Bioconductor\nFor single-cell RNA-seq projects, Bioconductor has been introducting new classes and standards very rapidly in the past few years. Notably, several packages are increasingly becoming central for single-cell analysis:\n\nSingleCellExperiment\nscater\nscran\nscuttle\nbatchelor\nSingleR\nbluster\nDropletUtils\nslingshot\ntradeSeq\n…\n\nSingleCellExperiment is the fundamental class designed to contain single-cell (RNA-seq) data in Bioconductor ecosystem. It is a modified version of the SummarizedExperiment object, so most of the getters/setters are shared with this class.\n\n\n\n\nR\n\nsource('~/Share/bin/prepare_Nestorowa.R') # Adapted from Nestorowa et al., Blood 2016 (doi: 10.1182/blood-2016-05-716480)\nsce\nclass(sce)\n\n\nSeveral slots can be accessed in a SingleCellExperiment object, just like the SummarizedExperiment object it’s been adapted from:\n\n\n\nR\n\ncolData(sce)\nrowData(sce)\nmetadata(sce)\ndim(sce)\nassays(sce)\n\n\nQuantitative metrics for scRNAseq studies can also be stored in assays:\n\n\n\nR\n\nassays(sce)\nassay(sce, 'counts')[1:10, 1:10]\nassay(sce, 'logcounts')[1:10, 1:10]\ncounts(sce)[1:10, 1:10]\nlogcounts(sce)[1:10, 1:10]\n\n\n\nCheck the colData() output of the sce object. What information is stored there? How can you access the different objects stored in colData?\n\n\n\n\nR\n\ncolData(sce)\nlapply(colData(sce), class)\nhead(colData(sce)[[1]])\nhead(colData(sce)[['FACS']])\nhead(sce$sizeFactor)\n\n\n\nAre there any reduced dimensionality representation of the data stored in the sce object? How can we run a PCA using normalized counts?\n\n\n\n\nR\n\nreducedDims(sce)\npca <- prcomp(t(logcounts(sce)))\nnames(pca)\ndim(pca$x)\nhead(pca$x[, 1:50])\n\n\n\nNow, let’s compute a UMAP embedding from this PCA and compare it to the PCA embedding.\n\n\n\n\nR\n\numap <- uwot::umap(pca$x)\ncolnames(umap) <- c('UMAP1', 'UMAP2')\nplot(pca$x[,1], pca$x[,2])\nplot(umap[,1], umap[,2])\n\n\nWe will see more advanced ways of reducing scRNAseq data dimensionality in the coming lectures and labs.\n\n6.3.2 scRNAseq in R\nSeurat is another very popular ecosystem to investigate scRNAseq data. It is primarily developed and maintained by the Sajita Lab. It originally begun as a single package aiming at encompassing “all” (most) aspects of scRNAseq analysis. However, it rapidly evolved in a much larger project, and now operates along with other “wrappers” and extensions. It also has a very extended support from the lab group. All in all, is provides a (somewhat) simple workflow to start investigating scRNAseq data.\nIt is important to chose one standard that you feel comfortable with yourself. Which standard provides the most intuitive approach for you? Do you prefer an “all-in-one, plug-n-play” workflow (Seurat-style), or a modular approach (Bioconductor-style)? Which documentation is easier to read for you, a central full-featured website with extensive examples (Seurat-style), or “programmatic”-style vignettes (Bioconductor-style)?\nThis course will mostly rely on Bioconductor-based methods, but sometimes use Seurat-based methods.s In the absence of coordination of data structures, the next best solution is to write functions to coerce an object from a certain class to another class (i.e. Seurat to SingleCellExperiment, or vice-versa). Luckily, this is quite straightforward in R for these 2 data classes:\n\n\n\nR\n\nsce_seurat <- Seurat::as.Seurat(sce)\nstr(sce)\nsce\nsce_seurat\nsce2 <- Seurat::as.SingleCellExperiment(sce_seurat)\n\n\n\nDo you see any change between sce and the corresponding, “back-converted”, sce2 objects? Explain these differences.\n\n\n\n\nR\n\nsce\nsce2\n#\ncolData(sce)\ncolData(sce2)\n\n\n\nTry and access the underlying raw or normalized data from the sce_seurat object. How does it compare to data access from an SingleCellExperiment object?\n\n\n\n\nR\n\ncolnames(sce_seurat)\nncol(sce_seurat)\nnrow(sce_seurat)\n# cells and features access\nhead(Seurat::Cells(sce_seurat))\nhead(rownames(sce_seurat))\n# cell data access\nhead(sce_seurat[[]])\nhead(sce_seurat$label)\n# Counts access\nSeurat::GetAssayData(object = sce_seurat, slot = \"counts\")[1:10, 1:10]\nSeurat::GetAssayData(object = sce_seurat, slot = \"data\")[1:10, 1:10]\n# Embeddings \nhead(Seurat::Embeddings(object = sce_seurat, reduction = \"diffusion\"))"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#reading-scrnaseq-data",
    "href": "content/day2/Lab3_Rbioc.html#reading-scrnaseq-data",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.4 Reading scRNAseq data",
    "text": "6.4 Reading scRNAseq data\n\nTry to load the raw 10X single-cell RNA-seq data downloaded yesterday (from Lier et al.) into a SingleCellExperiment object using DropletUtils package.\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\nsce <- DropletUtils::read10xCounts('~/Share/data_wrangling/counts/outs/filtered_feature_bc_matrix.h5')\nsce\ncolData(sce)\nrowData(sce)\n\n\nPublic single-cell RNA-seq data can be retrieved from within R directly, thanks to several data packages, for instance scRNAseq or HCAData.\n\nCheck out the He et al., Genome Biol. 2020 paper. Can you find a way to load the scRNAseq data from this paper without having to leave the R console?\n\n\n\n\nR\n\norgans <- scRNAseq::HeOrganAtlasData(ensembl = TRUE)\norgans\n\n\nThe interest of this approach is that one can recover a full-fledged SingleCellExperiment (often) provided by the authors of the corresponding study. This means that lots of information, such as batch ID, clustering, cell annotation, etc., may be readily available.\n\nCheck the data available for cells/features in the dataset from He et al..\n\n\n\n\nR\n\ncolData(organs)\ntable(organs$Tissue)\ntable(organs$reclustered.fine, organs$Tissue)"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#bonus",
    "href": "content/day2/Lab3_Rbioc.html#bonus",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.5 Bonus",
    "text": "6.5 Bonus\nTo compare the two different approaches, try preparing both a SingleCellExperiment or a Seurat object from scratch, using the matrix files generated in the previous lab. Read the documentation of the two related packages to understand how to do this.\nThis will be extensively covered in the next lab for everybody."
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#session-info",
    "href": "content/day2/Lab3_Rbioc.html#session-info",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.6 Session info",
    "text": "6.6 Session info"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#introduction",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#introduction",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.1 Introduction",
    "text": "7.1 Introduction\nData produced in a single cell RNA-seq experiment has several interesting characteristics that make it distinct from data produced in a bulk population RNA-seq experiment. Two characteristics that are important to keep in mind when working with scRNA-Seq are drop-out (the excessive amount of zeros due to limiting mRNA) and the potential for quality control (QC) metrics to be confounded with biology. This combined with the ability to measure heterogeniety from cells in samples has shifted the field away from the typical analysis in population-based RNA-Seq. Here we demonstrate some approaches to quality control, followed by identifying and analyzing cell subsets.\n\n7.1.1 Load necessary packages\nWhen loading libraries, we are asking R to load code for us written by someone else. It is a convenient way to leverage and reproduce methodology developed by others.\n\n\n\nR\n\nlibrary(tidyverse)\nlibrary(SingleCellExperiment)\nlibrary(scater)\nlibrary(scran)\n\n\n\n7.1.2 Read in Pancreas counts matrix.\nFor this tutorial, we will be analyzing a human pancreas scRNAseq dataset. It is freely available from GEO: link. We start by downloading the cell, features and counts matrix.\n\nGet the downloadable links for each file\n\n\n\n\nR\n\ndownload.file('https://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114802/suppl/GSE114802_org4_barcodes.tsv.gz', 'GSE114802_org4_barcodes.tsv.gz')\ndownload.file('https://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114802/suppl/GSE114802_org4_genes.tsv.gz', 'GSE114802_org4_genes.tsv.gz')\ndownload.file('https://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114802/suppl/GSE114802_org4_counts.csv.gz', 'GSE114802_org4_counts.csv.gz')\n\n\n\nImport each table in R\n\n\n\n\nR\n\ncells <- read_tsv('~/Share/GSE114802_org4_barcodes.tsv.gz', col_names = FALSE)\ngenes <- read_tsv('~/Share/GSE114802_org4_genes.tsv.gz', col_names = FALSE)\ncounts <- read_csv('~/Share/GSE114802_org4_counts.csv.gz', col_names = TRUE)\ncounts <- counts[, -1]\ncounts <- as(counts, 'matrix')\ncounts <- as(counts, 'dgCMatrix')\nrownames(counts) <- genes$X1\n\n\n\nTransform into a SingleCellExperiment object\n\n\n\n\nR\n\nsce <- SingleCellExperiment(\n    colData = cells, \n    rowData = genes, \n    assays = list('counts' = counts)\n)\n\n\n\nExamine the SingleCellExperiment object you’ve just created. Get an idea of the size of the dataset, the different data available, etc.\n\n\n\n\nR\n\ncolData(sce)\nrowData(sce)\nmetadata(sce)\ndim(sce)\nassays(sce)\ncounts(sce)[1:10, 1:10]\nreducedDims(sce)\n\n\n\nHow much memory does a sparse matrix take up relative to a dense matrix? (use object.size() to get the size of an object…)\n\n\n\n\nR\n\ncounts <- counts(sce)\nobject.size(counts) # size in bytes\nobject.size(as.matrix(counts)) # size in bytes\n\n\n\nCompare it to the sparsity of the counts (the % of the counts equal to 0)\n\n\n\n\nR\n\nsum(counts > 0) / (nrow(sce)*ncol(sce))"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#basic-qcs",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#basic-qcs",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.2 Basic QCs",
    "text": "7.2 Basic QCs\nYou can learn a lot about your scRNA-seq data’s quality with simple plotting.\nLet’s do some plotting to look at the number of reads per cell, reads per genes, expressed genes per cell (often called complexity), and rarity of genes (cells expressing genes).\n\nLook at the summary counts for genes and cells\n\n\n\n\nR\n\ncounts_per_cell <- Matrix::colSums(counts)\ncounts_per_gene <- Matrix::rowSums(counts)\ngenes_per_cell <- Matrix::colSums(counts > 0) # count gene only if it has non-zero reads mapped.\nhist(log10(counts_per_cell+1), main = '# of counts per cell', col = 'wheat')\nhist(log10(genes_per_cell+1), main = '# of expressed genes per cell', col = 'wheat')\nplot(counts_per_cell, genes_per_cell, log = 'xy', col = 'wheat')\ntitle('Counts vs genes per cell')\n\n\n\nCan you plot a histogram of counts per gene in log10 scale?\n\n\n\n\nR\n\ncells_per_gene <- Matrix::rowSums(counts > 0) # only count cells where the gene is expressed\nhist(log10(cells_per_gene+1), main = '# of cells expressing each gene', col = 'wheat')\n\n\n\nPlot cells ranked by their number of detected genes\n\nTo do that, first sort cells by their library complexity, ie the number of genes detected per cell.\nThis is a very useful plot as it shows the distribution of library complexity in the sequencing run.\nOne can use this plot to investigate observations (potential cells) that are actually failed libraries (lower end outliers) or observations that are cell doublets (higher end outliers).\n\n\n\nR\n\nplot(sort(genes_per_cell), xlab = 'cell', log = 'y', main = '# of genes per cell (ordered)')\n\n\n\nSeveral QCs can be automatically computed using quickPerCellQC(). Try it out and check the results.\nWhat are the total and detected columns?\n\n\n\n\nR\n\nsce <- scuttle::quickPerCellQC(sce)\ncolData(sce)"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#access-to-stored-informations",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#access-to-stored-informations",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.3 Access to stored informations",
    "text": "7.3 Access to stored informations\n\n7.3.1 Assay slots\nFor typical scRNA-seq experiments, a SingleCellExperiment can have multiple assays, corresponding to different metrics. The most basic one is counts.\nDifferent assays store different ‘transformations’ of the counts(e.g. `logcounts).\n\nTry to manually compute logcounts from counts and store it in a new slot\n\n\n\n\nR\n\nassay(sce, 'logcounts') <- log10(counts(sce) + 1)\n\n\n\n7.3.2 Embeddings\nEmbeddings allow for a representation of large-scale data (N cells x M genes) into smaller dimensions (e.g. 2-50 dimensions). Typical embeddings can be PCA, t-SNE, UMAP, etc… Many embeddings can be computed using run...() functions from Bioconductor packages (e.g. scran, scater, …).\n\nCompute PCA embedding of the dataset using runPCA() from scater package\n\n\n\n\nR\n\nsce <- scater::runPCA(sce)\nplotReducedDim(sce, \"PCA\")\n\n\n\nCompute t-SNE embedding of the dataset using runTSNE() from scater package\n\n\n\n\nR\n\nsce <- scater::runTSNE(sce)\nplotReducedDim(sce, \"TSNE\")\n\n\n\nCompute UMAP embedding of the dataset using runUMAP() from scater package\n\n\n\n\nR\n\nsce <- scater::runUMAP(sce)\nplotReducedDim(sce, \"UMAP\", colour_by = 'sum')\nplotReducedDim(sce, \"UMAP\", colour_by = 'detected')\n\n\n\n7.3.3 Multiple modalities\nAlternative ‘modalities’ can be stored in the same SingleCellExperiment object (e.g. if you perform paired single-cell RNA-seq and ATAC-seq). This is done through altExps which can store summarized experiments.\n\nTry to add an altExp (using altExp<- function)\n\n\n\n\nR\n\naltExp(sce, \"ATAC_counts\") <- SummarizedExperiment(matrix(rpois(1000, 5), ncol = ncol(sce)))\nswapAltExp(sce, \"ATAC_counts\", saved = \"RNA_counts\")\n\n\nNote that features can be different between different altExps."
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#filtering-cells-and-features",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#filtering-cells-and-features",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.4 Filtering cells and features",
    "text": "7.4 Filtering cells and features\n\n7.4.1 Pre-filtering\n\nFilter the SCE to only include (1) cells that have a complexity of 2000 genes or more and (2) genes that are are expressed in 10 or more cells. \n\n\n\n\nR\n\nsce_filtered <- sce[\n    Matrix::rowSums(counts(sce) > 0) > 10, \n    Matrix::colSums(counts(sce) > 0) > 2000\n ]\n\n\nAlmost all our analysis will be on this single object, of class SingleCellExperiment. This object contains various “slots” that will store not only the raw count data, but also the results from various computations below. This has the advantage that we do not need to keep track of inidividual variables of interest - they can all be collapsed into a single object as long as these slots are pre-defined.\n\n7.4.2 Filtering low-quality cells: mitochondrial counts\nFor each cell, we can calculate the percentage of counts mapping on mitochondrial genes and store it in a column percent_mito in our colData().\n\nFind mitochondrial genes, compute the % of total counts associated with these genes, and store it in colData\n\n\n\n\nR\n\nrowData(sce_filtered)\nmito_genes <- rownames(sce_filtered)[grep(pattern = \"^MT-\", x = rowData(sce_filtered)$X2)]\nmito_genes_counts <- counts(sce_filtered)[mito_genes, ]\npercent_mito <- colSums(mito_genes_counts) / sce_filtered$total\nhist(percent_mito*100, main = '% of total counts over mitochondrial genes', col = 'wheat')\ncolData(sce_filtered)$percent_mito <- percent_mito\n\n\n\nRemove cells with a % of mitochondrial counts greater than 10%.\n\n\n\n\nR\n\nsce_filtered <- sce_filtered[\n    , \n    sce_filtered$percent_mito <= 0.10\n]\n\n\n\n7.4.3 Checking housekeeping genes\nAnother metric we use is the number of house keeping genes expressed in a cell. These genes reflect commomn processes active in a cell and hence are a good global quality measure. They are also abundant and are usually steadliy expressed in cells, thus less sensitive to the high dropout.\n\n\n\nR\n\n# Load the list of housekeeping genes\nhkgenes <- read.table(\"Share/tirosh_house_keeping.txt\", skip = 2)\nhkgenes <- as.vector(hkgenes$V1)\nhkgenes <- rownames(sce_filtered)[match(hkgenes, rowData(sce_filtered)$X2)]\nhkgenes <- hkgenes[!is.na(hkgenes)]\n\n\n\nCompute the number of detected HK genes for each cell and store it in colData\n\n\n\n\nR\n\ncolData(sce_filtered)$n_expressed_hkgenes <- Matrix::colSums(counts(sce_filtered)[hkgenes, ] > 0)\n\n\n\nPlot (in a boxplot) the relationship between the # of detected housekeeping genes and the total UMI count (or # of detected genes) per cell. Comment\n\n\n\n\nR\n\ncolData(sce_filtered)$n_expressed_hkgenes <- Matrix::colSums(counts(sce_filtered)[hkgenes, ] > 0)\nboxplot(colData(sce_filtered)$total ~ colData(sce_filtered)$n_expressed_hkgenes)\nboxplot(colData(sce_filtered)$detected ~ colData(sce_filtered)$n_expressed_hkgenes)\n\n\n\nRemove cells with a # of expressed housekeeping genes greater than 85\n\n\n\n\nR\n\nsce_filtered <- sce_filtered[, sce_filtered$n_expressed_hkgenes <= 85]\n\n\n\n7.4.4 Checking gene set expression\nSometimes we want to ask what is the expression of a gene / a set of a genes across cells. This set of genes may make up a gene expression program we are interested in. Another benefit at looking at gene sets is it reduces the effects of drop outs.\nLet’s look at genes involved in the stress signature upon cell dissociation. We calculate these genes average expression levels on the single cell level.\n\n\n\nR\n\ngenes_dissoc <- c(\"ATF3\", \"BTG2\", \"CEBPB\", \"CEBPD\", \"CXCL3\", \"CXCL2\", \"CXCL1\", \"DNAJA1\", \"DNAJB1\", \"DUSP1\", \"EGR1\", \"FOS\", \"FOSB\", \"HSP90AA1\", \"HSP90AB1\", \"HSPA1A\", \"HSPA1B\", \"HSPA1A\", \"HSPA1B\", \"HSPA8\", \"HSPB1\", \"HSPE1\", \"HSPH1\", \"ID3\", \"IER2\", \"JUN\", \"JUNB\", \"JUND\", \"MT1X\", \"NFKBIA\", \"NR4A1\", \"PPP1R15A\", \"SOCS3\", \"ZFP36\")\ngenes_dissoc <- rownames(sce_filtered)[match(genes_dissoc, rowData(sce_filtered)$X2)]\ngenes_dissoc <- unique(genes_dissoc[!is.na(genes_dissoc)])\n\n\n\nCalculate the average gene set expression for each cell\n\n\n\n\nR\n\nave_expr_genes_dissoc <- colMeans(logcounts(sce_filtered[genes_dissoc, ]))\ncolData(sce_filtered)$ave_expr_genes_dissoc <- ave_expr_genes_dissoc\n\n\n\nPlot an embedding of the dataset, using a color scale representing the average expression of genes involved in the stress signature upon cell dissociation. Comment.\n\n\n\n\nR\n\nplotReducedDim(sce_filtered, dimred = 'PCA', colour_by = 'ave_expr_genes_dissoc')"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#session-info",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#session-info",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.5 Session info",
    "text": "7.5 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21)\n os       macOS Monterey 12.5.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_GB.UTF-8\n ctype    en_GB.UTF-8\n tz       Europe/Paris\n date     2023-06-07\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cachem        1.0.7   2023-02-24 [1] CRAN (R 4.3.0)\n callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.0)\n cli           3.6.0   2023-01-09 [1] CRAN (R 4.3.0)\n crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.0)\n devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.0)\n digest        0.6.31  2022-12-11 [1] CRAN (R 4.3.0)\n ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.3.0)\n evaluate      0.20    2023-01-17 [1] CRAN (R 4.3.0)\n fastmap       1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n fs            1.6.1   2023-02-06 [1] CRAN (R 4.3.0)\n glue          1.6.2   2022-02-24 [1] CRAN (R 4.3.0)\n htmltools     0.5.4   2022-12-07 [1] CRAN (R 4.3.0)\n htmlwidgets   1.6.1   2023-01-07 [1] CRAN (R 4.3.0)\n httpuv        1.6.9   2023-02-14 [1] CRAN (R 4.3.0)\n jsonlite      1.8.4   2022-12-06 [1] CRAN (R 4.3.0)\n knitr         1.42    2023-01-25 [1] CRAN (R 4.3.0)\n later         1.3.0   2021-08-18 [1] CRAN (R 4.3.0)\n lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)\n magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n memoise       2.0.1   2021-11-26 [1] CRAN (R 4.3.0)\n mime          0.12    2021-09-28 [1] CRAN (R 4.3.0)\n miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0)\n pkgbuild      1.4.0   2022-11-27 [1] CRAN (R 4.3.0)\n pkgload       1.3.2   2022-11-16 [1] CRAN (R 4.3.0)\n prettyunits   1.1.1   2020-01-24 [1] CRAN (R 4.3.0)\n processx      3.8.0   2022-10-26 [1] CRAN (R 4.3.0)\n profvis       0.3.7   2020-11-02 [1] CRAN (R 4.3.0)\n promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.0)\n ps            1.7.2   2022-10-26 [1] CRAN (R 4.3.0)\n purrr         1.0.1   2023-01-10 [1] CRAN (R 4.3.0)\n R6            2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp          1.0.10  2023-01-22 [1] CRAN (R 4.3.0)\n remotes       2.4.2   2021-11-30 [1] CRAN (R 4.3.0)\n rlang         1.0.6   2022-09-24 [1] CRAN (R 4.3.0)\n rmarkdown     2.20    2023-01-19 [1] CRAN (R 4.3.0)\n sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n shiny         1.7.4   2022-12-15 [1] CRAN (R 4.3.0)\n stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.0)\n stringr       1.5.0   2022-12-02 [1] CRAN (R 4.3.0)\n urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.0)\n usethis       2.1.6   2022-05-25 [1] CRAN (R 4.3.0)\n vctrs         0.5.2   2023-01-23 [1] CRAN (R 4.3.0)\n xfun          0.37    2023-01-31 [1] CRAN (R 4.3.0)\n xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.0)\n\n [1] /Users/jacques/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day3/Lecture4_clustering.html",
    "href": "content/day3/Lecture4_clustering.html",
    "title": "8  Lecture 4 - Identifying cell populations",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/day2/Lab4_data_wrangling_scRNAseq.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\"><span class='chapter-number'>7</span>  <span class='chapter-title'>Lab 4 - Single-cell RNA-seq data wrangling</span></span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/day3/Lab5_clustering.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\"><span class='chapter-number'>9</span>  <span class='chapter-title'>Lab 5: Dimension reduction, clustering and annotation</span></span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#dimensional-reduction-for-clustering",
    "href": "content/day3/Lab5_clustering.html#dimensional-reduction-for-clustering",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.1 Dimensional reduction for clustering",
    "text": "9.1 Dimensional reduction for clustering\n\n9.1.1 Preparing dataset\nWe will prepare scRNAseq data from a PBMC run, provided by 10X and hosted by Bioconductor as a package.\n\nWhich package from Bioconductor gives streamlined access to PBMC scRNAseq dataset from 10X Genomics?\nWhat does the object contain (type of data, number of cells, batches, organism, …)? Can you get the same data from somewhere else?\n\n\n\n\nR\n\nlibrary(tidyverse)\nlibrary(SingleCellExperiment)\nsce <- TENxPBMCData::TENxPBMCData('pbmc4k')\nrownames(sce) <- scuttle::uniquifyFeatureNames(rowData(sce)$ENSEMBL_ID, rowData(sce)$Symbol_TENx)\nsce\nrowData(sce)\ncolData(sce)\ntable(sce$Library)\n\n\n\n9.1.2 Normalize counts using scran\n\nJust like in bulk high-throughput sequencing experiments, scRNAseq counts have to be normalized to the sequencing depth for each cell. We can define the library size as the total sum of counts across all genes for each cell, the expected value of which is assumed to scale with any cell-specific biases. However, this relies on the assumption that within the entire dataset, most genes are non-differentially expressed and expressed roughly within the same range. Depending on the set up of the scRNAseq experiment, this can be entirely false. To avoid relying on this hypothesis, we can (1) quickly pre-cluster cells, then (2) normalize cells using their library size factor separately in each cluster, then (3) rescaling size factors so that they are comparable across clusters.\nAll of this can be done very simply using the combo quickCluster() + computeSumFactors() + logNormCounts() from scran/scuttle packages.\n\n\n\nR\n\nclusters <- scran::quickCluster(sce)\ntable(clusters)\nsce <- scran::computeSumFactors(sce, cluster = clusters)\ncolData(sce)\nsce <- scuttle::logNormCounts(sce)\nassays(sce)\n\n\n\n9.1.3 Feature selection\nWe often use scRNAseq data in exploratory analyses to characterize heterogeneity across cells. Procedures like clustering and dimensionality reduction compare cells based on their gene expression profiles. The choice of genes to include in this comparison may have a major impact on the performance of downstream methods. Ideally, one wants to only select genes that contain useful information about the biology of the system while removing genes that contain random noise. This aims to preserve interesting biological structure without the variance that obscures that structure.\nThe simplest approach to feature selection is to compute the variance of the log-normalized expression values, to select the most variable genes. Modelling of the mean-variance relationship can be achieved by the modelGeneVar() function from the scran package.\n\n\n\nR\n\nsce_filtered_variance <- scran::modelGeneVar(sce)\nHVGs <- scran::getTopHVGs(sce_filtered_variance, prop = 0.1)\nrowData(sce)$isHVG <- rownames(sce) %in% HVGs\nhead(rowData(sce))\ntable(rowData(sce)$isHVG)\n\n## --- Visualizing the mean-variance fit\ndf <- tibble(\n    mean = metadata(sce_filtered_variance)$mean, \n    var = metadata(sce_filtered_variance)$var, \n    trend = metadata(sce_filtered_variance)$trend(mean), \n    HVG = rowData(sce)$isHVG\n)\nggplot(df) + \n    geom_point(aes(x = mean, y = var, col = HVG), alpha = 0.4) + \n    geom_line(aes(x = mean, y = trend), col = 'darkred') +\n    theme_minimal() + \n    labs(x = 'Gene mean exp. (norm.)', y = 'Gene exp. variance')\n\n\n\n9.1.4 PCA on filtered dataset\nWe now have normalized counts filtered for the top 500 genes varying with the greatest biological significance.\nStill, that represents a 500 x nCells (~8,000) dataset (each row being a feature). This is still too big to reliably use in standard clustering approaches. We can further compress the dataset. The most widely used approach is PCA: it computes a small number of “components” (typically 5-50) optimally summarizing the variability of the whole dataset, while retaining linearity of the underlying numerical data and being computationallt quite efficient.\n\nLeverage scater package to compute a PCA embedding of the filtered data by taking into account the technical variability.\n\n\n\n\nR\n\nsce <- scran::denoisePCA(\n    sce, \n    technical = sce_filtered_variance, \n    subset.row = HVGs, \n    min.rank = 15\n)\np <- scater::plotReducedDim(sce, 'PCA', colour_by = 'sizeFactor') + ggtitle('denoised PCA')\np"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#clustering",
    "href": "content/day3/Lab5_clustering.html#clustering",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.2 Clustering",
    "text": "9.2 Clustering\nClustering is an unsupervised learning procedure that is used in scRNA-seq data analysis to empirically define groups of cells with similar expression profiles. Its primary purpose is to summarize the data in a digestible format for human interpretation.\nAfter annotation based on marker genes, the clusters can be treated as proxies for more abstract biological concepts such as cell types or states. Clustering is thus a critical step for extracting biological insights from scRNA-seq data.\n\n9.2.1 Clustering algorithms\nThree main approaches can be used:\n\nHierarchical clustering\nk-means clustering\nGraph-based clustering\n\nToday, we will focus on graph-based clustering, as it is becoming the standard for scRNAseq: it is a flexible and scalable technique for clustering even the largest scRNA-seq datasets. We first build a graph where each node is a cell that is connected by edges to its nearest neighbors in the high-dimensional space. Edges are weighted based on the similarity between the cells involved, with higher weight given to cells that are more closely related.\n\nCompute graph-based clustering of the PBMC dataset.\n\n\n\n\nR\n\ngraph <- scran::buildSNNGraph(\n    sce, \n    k = 5, \n    use.dimred = 'PCA'\n)\nsce_clust <- igraph::cluster_louvain(graph)$membership\ntable(sce_clust)\nsce$clusters_graph <- factor(sce_clust)\n\n\n\nWhat are the main parameters to choose? How do they impact the clustering?\n\n\n\n\nR\n\ngraph2 <- scran::buildSNNGraph(\n    sce, \n    k = 50, \n    use.dimred = 'PCA'\n)\nsce_clust2 <- igraph::cluster_louvain(graph2)$membership\ntable(sce_clust, sce_clust2)\n\n\n\n9.2.2 Dimensional reduction for clustering visualization\nPCA is a powerful linear approach to compress large datasets into smaller dimensional spaces. However, it struggles at emphasizing the existence of clusters in complex datasets, when visualized in 2D.\nscater provides a handy way to perform more complex data embeddings:\n- tSNE\n- UMAP\n- Diffusion Map\n- Multi-Dimensional Scaling (MDS)\n- Non-negative Matrix Factorization (NMF)\n\nExplore the different dimensional reduction algorithms, trying different hyperparameters combinations.\n\nWhen you run these commands, pay attention to how long each command takes to run! While this run, check the Help page for each function (e.g. ?runTSNE)\n\n\n\nR\n\nreducedDims(sce)\nsce <- scater::runTSNE(sce, subset_row = HVGs)\nsce <- scater::runUMAP(sce, subset_row = HVGs)\nreducedDims(sce)\nreducedDim(sce, 'UMAP')[1:10, ]\n\n\n\nUse the scater::plotReducedDim() function to plot cells in each embedding. Comment.\n\n\n\n\nR\n\nlibrary(patchwork)\np<- scater::plotReducedDim(sce, 'PCA', colour_by = 'clusters_graph') + ggtitle('denoised PCA') +\n    scater::plotReducedDim(sce, 'TSNE', colour_by = 'clusters_graph') + ggtitle('tSNE') +\n    scater::plotReducedDim(sce, 'UMAP', colour_by = 'clusters_graph') + ggtitle('UMAP')\n\n\n\n9.2.3 For the pros of clustering… Compare different clustering approaches\nLeveraging the bluster package, different clustering approaches can be performed using a uniformed syntax, to compare their output.\n\nUsing clusterSweep(), compare the effect of different k neighbor values when performing graph-based clustering.\n\n\n\n\nR\n\nclusters <- bluster::clusterSweep(\n    reducedDim(sce, 'PCA'), \n    BLUSPARAM = bluster::SNNGraphParam(),\n    k = c(5L, 15L, 25L, 50L), \n    cluster.fun = c(\"louvain\")\n)\ncolnames(clusters$clusters)\nhead(clusters$clusters)\nclusters$parameters\nlibrary(ggraph)\np <- cowplot::plot_grid(\n    clustree::clustree(\n        clusters$clusters %>% setNames(1:ncol(.)) %>% as.data.frame(),\n        prefix = 'X',\n        edge_arrow=FALSE\n    ), \n    cowplot::plot_grid(\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.5_cluster.fun.louvain'])) + ggtitle('k = 5'),\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.15_cluster.fun.louvain'])) + ggtitle('k = 15'),\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.25_cluster.fun.louvain'])) + ggtitle('k = 25'),\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.50_cluster.fun.louvain'])) + ggtitle('k = 50')\n    ), \n    nrow = 2, \n    rel_heights = c(0.3, 0.7)\n)\ntable(clusters$clusters[, 'k.5_cluster.fun.louvain'])"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#cell-annotation",
    "href": "content/day3/Lab5_clustering.html#cell-annotation",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.3 Cell annotation",
    "text": "9.3 Cell annotation\n\n9.3.1 Find marker genes\nTo interpret clustering results, one needs to identify the genes that drive separation between clusters. These marker genes allow to assign biological meaning to each cluster based on their functional annotation. In the most obvious case, the marker genes for each cluster are a priori associated with particular cell types, allowing us to treat the clustering as a proxy for cell type identity.\nA general strategy is to perform DE tests between pairs of clusters and then combine results into a single ranking of marker genes for each cluster.\n\n\n\nR\n\nmarkers <- scran::findMarkers(sce, groups = sce$clusters_graph)\n\n\n\nFind markers strongly overexpressed in each cluster. Check ?scran::findMarkers to find the right options to use.\n\n\n\n\nR\n\nmarkers <- scran::findMarkers(\n    sce, \n    groups = sce$clusters_graph, \n    direction = \"up\", \n    lfc = 1\n)\nhead(markers[[1]])\nmarkers <- lapply(markers, function(df) {\n    rownames(df[df$Top <= 5,])\n})\n\n\n\nPlot average expression of the first marker of the first cluster in UMAP\n\n\n\n\nR\n\np <- scater::plotReducedDim(sce, 'TSNE', colour_by = markers[[2]][[1]])\n\n\n\n9.3.2 Automated cell annotation\nMany cell type reference databases are available over the Internet. Today, we will use a reference constructed from Blueprint and ENCODE data (Martens and Stunnenberg 2013; The ENCODE Project Consortium 2012). This reference is available as a SummarizedExperiment containing log-normalized gene expression for manually annotated samples.\n\n\n\nR\n\nref <- celldex::BlueprintEncodeData()\nprediction_types <- SingleR::SingleR(\n    test = sce, \n    ref = ref, \n    labels = ref$label.main\n)\nsce$annotation <- prediction_types$labels\ntable(sce$annotation)\ntable(sce$annotation, sce$clusters_graph)\n\n\n\nUsing scater and SingleR utilities, visually compare the annotation scores for cells in each cluster.\nDid the automated annotation work robuslty? How does it compare to our clustering? Is automated annotation as sensitive as graph-based clustering?\n\n\n\n\nR\n\np <- SingleR::plotScoreHeatmap(prediction_types)\np <- scater::plotReducedDim(sce, 'TSNE', colour_by = 'annotation') + ggtitle('Automated annotation')\np <- pheatmap::pheatmap(\n    log2(table(Annotation = sce$annotation, Cluster = sce$clusters_graph)+10), \n    color = colorRampPalette(c(\"white\", \"darkred\"))(101)\n)"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#bonus",
    "href": "content/day3/Lab5_clustering.html#bonus",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.4 Bonus",
    "text": "9.4 Bonus\nTry to fill in the analysis template in bin/prepare_Ernst.R to execute the different processing/analysis steps we covered in the previous exercises and this one. If you prefer using Seurat, don’t hesitate to modify the base template!"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#acknowledgements",
    "href": "content/day3/Lab5_clustering.html#acknowledgements",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.5 Acknowledgements",
    "text": "9.5 Acknowledgements\nThis exercise was adapted from Chapts. 7-12 of Orchestrating Single-Cell Analysis with Bioconductor."
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#session-info",
    "href": "content/day3/Lab5_clustering.html#session-info",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.6 Session info",
    "text": "9.6 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21)\n os       macOS Monterey 12.5.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_GB.UTF-8\n ctype    en_GB.UTF-8\n tz       Europe/Paris\n date     2023-06-07\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package                * version   date (UTC) lib source\n AnnotationDbi          * 1.61.0    2022-11-01 [1] Bioconductor\n AnnotationHub          * 3.7.3     2023-03-01 [1] Bioconductor\n Biobase                * 2.59.0    2022-11-01 [1] Bioconductor\n BiocFileCache          * 2.7.2     2023-02-17 [1] Bioconductor\n BiocGenerics           * 0.45.0    2022-11-01 [1] Bioconductor\n BiocManager            * 1.30.20   2023-02-24 [1] CRAN (R 4.3.0)\n BiocVersion              3.17.1    2022-12-20 [1] Bioconductor\n Biostrings               2.67.0    2022-11-01 [1] Bioconductor\n bit                      4.0.5     2022-11-15 [1] CRAN (R 4.3.0)\n bit64                    4.0.5     2020-08-30 [1] CRAN (R 4.3.0)\n bitops                   1.0-7     2021-04-24 [1] CRAN (R 4.3.0)\n blob                     1.2.3     2022-04-10 [1] CRAN (R 4.3.0)\n cachem                   1.0.7     2023-02-24 [1] CRAN (R 4.3.0)\n callr                    3.7.3     2022-11-02 [1] CRAN (R 4.3.0)\n cli                      3.6.0     2023-01-09 [1] CRAN (R 4.3.0)\n colorspace               2.1-0     2023-01-23 [1] CRAN (R 4.3.0)\n cowplot                * 1.1.1     2020-12-30 [1] CRAN (R 4.3.0)\n crayon                   1.5.2     2022-09-29 [1] CRAN (R 4.3.0)\n curl                     5.0.0     2023-01-12 [1] CRAN (R 4.3.0)\n DBI                      1.1.3     2022-06-18 [1] CRAN (R 4.3.0)\n dbplyr                 * 2.3.1     2023-02-24 [1] CRAN (R 4.3.0)\n devtools                 2.4.5     2022-10-11 [1] CRAN (R 4.3.0)\n digest                   0.6.31    2022-12-11 [1] CRAN (R 4.3.0)\n dplyr                  * 1.1.0     2023-01-29 [1] CRAN (R 4.3.0)\n ellipsis                 0.3.2     2021-04-29 [1] CRAN (R 4.3.0)\n evaluate                 0.20      2023-01-17 [1] CRAN (R 4.3.0)\n fansi                    1.0.4     2023-01-22 [1] CRAN (R 4.3.0)\n fastmap                  1.1.1     2023-02-24 [1] CRAN (R 4.3.0)\n filelock                 1.0.2     2018-10-05 [1] CRAN (R 4.3.0)\n forcats                * 1.0.0     2023-01-29 [1] CRAN (R 4.3.0)\n fs                       1.6.1     2023-02-06 [1] CRAN (R 4.3.0)\n generics                 0.1.3     2022-07-05 [1] CRAN (R 4.3.0)\n GenomeInfoDb             1.35.15   2023-02-03 [1] Bioconductor\n GenomeInfoDbData         1.2.9     2022-11-04 [1] Bioconductor\n ggplot2                * 3.4.1     2023-02-10 [1] CRAN (R 4.3.0)\n glue                     1.6.2     2022-02-24 [1] CRAN (R 4.3.0)\n gtable                   0.3.1     2022-09-01 [1] CRAN (R 4.3.0)\n hms                      1.1.2     2022-08-19 [1] CRAN (R 4.3.0)\n htmltools                0.5.4     2022-12-07 [1] CRAN (R 4.3.0)\n htmlwidgets              1.6.1     2023-01-07 [1] CRAN (R 4.3.0)\n httpuv                   1.6.9     2023-02-14 [1] CRAN (R 4.3.0)\n httr                     1.4.5     2023-02-24 [1] CRAN (R 4.3.0)\n interactiveDisplayBase   1.37.0    2022-11-01 [1] Bioconductor\n IRanges                * 2.33.0    2022-11-01 [1] Bioconductor\n jsonlite                 1.8.4     2022-12-06 [1] CRAN (R 4.3.0)\n KEGGREST                 1.39.0    2022-11-01 [1] Bioconductor\n knitr                    1.42      2023-01-25 [1] CRAN (R 4.3.0)\n later                    1.3.0     2021-08-18 [1] CRAN (R 4.3.0)\n lifecycle                1.0.3     2022-10-07 [1] CRAN (R 4.3.0)\n lubridate              * 1.9.2     2023-02-10 [1] CRAN (R 4.3.0)\n magrittr                 2.0.3     2022-03-30 [1] CRAN (R 4.3.0)\n memoise                  2.0.1     2021-11-26 [1] CRAN (R 4.3.0)\n mime                     0.12      2021-09-28 [1] CRAN (R 4.3.0)\n miniUI                   0.1.1.1   2018-05-18 [1] CRAN (R 4.3.0)\n munsell                  0.5.0     2018-06-12 [1] CRAN (R 4.3.0)\n pillar                   1.8.1     2022-08-19 [1] CRAN (R 4.3.0)\n pkgbuild                 1.4.0     2022-11-27 [1] CRAN (R 4.3.0)\n pkgconfig                2.0.3     2019-09-22 [1] CRAN (R 4.3.0)\n pkgload                  1.3.2     2022-11-16 [1] CRAN (R 4.3.0)\n png                      0.1-8     2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits              1.1.1     2020-01-24 [1] CRAN (R 4.3.0)\n processx                 3.8.0     2022-10-26 [1] CRAN (R 4.3.0)\n profvis                  0.3.7     2020-11-02 [1] CRAN (R 4.3.0)\n promises                 1.2.0.1   2021-02-11 [1] CRAN (R 4.3.0)\n ps                       1.7.2     2022-10-26 [1] CRAN (R 4.3.0)\n purrr                  * 1.0.1     2023-01-10 [1] CRAN (R 4.3.0)\n R6                       2.5.1     2021-08-19 [1] CRAN (R 4.3.0)\n rappdirs                 0.3.3     2021-01-31 [1] CRAN (R 4.3.0)\n Rcpp                     1.0.10    2023-01-22 [1] CRAN (R 4.3.0)\n RCurl                    1.98-1.10 2023-01-27 [1] CRAN (R 4.3.0)\n readr                  * 2.1.4     2023-02-10 [1] CRAN (R 4.3.0)\n remotes                  2.4.2     2021-11-30 [1] CRAN (R 4.3.0)\n rlang                    1.0.6     2022-09-24 [1] CRAN (R 4.3.0)\n rmarkdown                2.20      2023-01-19 [1] CRAN (R 4.3.0)\n RSQLite                  2.3.0     2023-02-17 [1] CRAN (R 4.3.0)\n S4Vectors              * 0.37.4    2023-02-26 [1] Bioconductor\n scales                   1.2.1     2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo              1.2.2     2021-12-06 [1] CRAN (R 4.3.0)\n shiny                    1.7.4     2022-12-15 [1] CRAN (R 4.3.0)\n stringi                  1.7.12    2023-01-11 [1] CRAN (R 4.3.0)\n stringr                * 1.5.0     2022-12-02 [1] CRAN (R 4.3.0)\n tibble                 * 3.1.8     2022-07-22 [1] CRAN (R 4.3.0)\n tidyr                  * 1.3.0     2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect               1.2.0     2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse              * 2.0.0     2023-02-22 [1] CRAN (R 4.3.0)\n timechange               0.2.0     2023-01-11 [1] CRAN (R 4.3.0)\n tzdb                     0.3.0     2022-03-28 [1] CRAN (R 4.3.0)\n urlchecker               1.0.1     2021-11-30 [1] CRAN (R 4.3.0)\n usethis                  2.1.6     2022-05-25 [1] CRAN (R 4.3.0)\n utf8                     1.2.3     2023-01-31 [1] CRAN (R 4.3.0)\n vctrs                    0.5.2     2023-01-23 [1] CRAN (R 4.3.0)\n withr                    2.5.0     2022-03-03 [1] CRAN (R 4.3.0)\n xfun                     0.37      2023-01-31 [1] CRAN (R 4.3.0)\n xtable                   1.8-4     2019-04-21 [1] CRAN (R 4.3.0)\n XVector                  0.39.0    2022-12-20 [1] Bioconductor\n yaml                     2.3.7     2023-01-23 [1] CRAN (R 4.3.0)\n zlibbioc                 1.45.0    2022-12-20 [1] Bioconductor\n\n [1] /Users/jacques/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day3/Lecture5_batchcorrection.html",
    "href": "content/day3/Lecture5_batchcorrection.html",
    "title": "10  Lecture 5 - Data integration and batch effect correction",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/day3/Lab5_clustering.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\"><span class='chapter-number'>9</span>  <span class='chapter-title'>Lab 5: Dimension reduction, clustering and annotation</span></span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/day3/Lab6_batch_correction.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\"><span class='chapter-number'>11</span>  <span class='chapter-title'>Lab 6 - Batch correction</span></span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html",
    "href": "content/day3/Lab6_batch_correction.html",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "",
    "text": "In this lab, we will look at different single cell RNA-seq datasets collected from pancreatic islets. We will look at how different batch correction methods affect our data analysis."
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#load-settings-and-packages",
    "href": "content/day3/Lab6_batch_correction.html#load-settings-and-packages",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.1 Load settings and packages",
    "text": "11.1 Load settings and packages\n\n\n\nR\n\nlibrary(Seurat)\nlibrary(Matrix)\nlibrary(fossil) \nlibrary(dplyr)\nlibrary(plyr)\nlibrary(rliger)\n\n# Set folder location for saving output files. This is also the same location as input data.\nmydir <- \"~/Share/batch_correction/\"\n\n# Objects to save.\nwritedir <- \"~/\"\nRda.sparse.path <- paste0(writedir, \"pancreas_subsample.Rda\")\nRda.path <- paste0(writedir, \"pancreas_nobatchcorrect.Rda\")\nRda.Seurat3.path <- paste0(writedir, \"pancreas_Seurat3.Rda\")\nRda.liger.path <- paste0(writedir, \"pancreas_liger.Rda\")"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#read-in-pancreas-expression-matrices",
    "href": "content/day3/Lab6_batch_correction.html#read-in-pancreas-expression-matrices",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.2 Read in pancreas expression matrices",
    "text": "11.2 Read in pancreas expression matrices\n\n\n\nR\n\n# Read in all four input expression matrices\ncelseq.data <- read.table(paste0(mydir, \"pancreas_multi_celseq_expression_matrix.txt.gz\"))\ncelseq2.data <- read.table(paste0(mydir, \"pancreas_multi_celseq2_expression_matrix.txt.gz\"))\nfluidigmc1.data <- read.table(paste0(mydir, \"pancreas_multi_fluidigmc1_expression_matrix.txt.gz\"))\nsmartseq2.data <- read.table(paste0(mydir, \"pancreas_multi_smartseq2_expression_matrix.txt.gz\"))\n\n# Convert to sparse matrices for efficiency\ncelseq.data <- as(as.matrix(celseq.data), \"dgCMatrix\")\ncelseq2.data <- as(as.matrix(celseq2.data), \"dgCMatrix\")\nfluidigmc1.data <- as(as.matrix(fluidigmc1.data), \"dgCMatrix\")\nsmartseq2.data <- as(as.matrix(smartseq2.data), \"dgCMatrix\")"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#preparing-the-individual-seurat-objects-for-each-pancreas-dataset-without-batch-correction",
    "href": "content/day3/Lab6_batch_correction.html#preparing-the-individual-seurat-objects-for-each-pancreas-dataset-without-batch-correction",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.3 Preparing the individual Seurat objects for each pancreas dataset without batch correction",
    "text": "11.3 Preparing the individual Seurat objects for each pancreas dataset without batch correction\n\n\n\nR\n\n# What is the size of each single cell RNA-seq dataset? \n# Briefly describe the technology used to collect each dataset.\n# Which datasets do you expect to be different and which do you expect to be similar?\ndim(celseq.data)\ndim(celseq2.data)\ndim(fluidigmc1.data)\ndim(smartseq2.data)\n\n# Create and setup Seurat objects for each dataset with the following 6 steps.\n# 1. CreateSeuratObject\n# 2. subset\n# 3. NormalizeData\n# 4. FindVariableGenes\n# 5. ScaleData \n# 6. Update @meta.data slot in Seurat object with tech column (celseq, celseq2, fluidigmc1, smartseq2)\n# Look at the distributions of number of genes per cell before and after FilterCells.\n\n# CEL-Seq (https://www.cell.com/cell-reports/fulltext/S2211-1247(12)00228-8)\n# In subset, use low.thresholds = 1750\ncelseq <- CreateSeuratObject(counts = celseq.data)\nVlnPlot(celseq, \"nFeature_RNA\")\ncelseq <- subset(celseq, subset = nFeature_RNA > 1750)\nVlnPlot(celseq, \"nFeature_RNA\")\ncelseq <- NormalizeData(celseq, normalization.method = \"LogNormalize\", scale.factor = 10000)\ncelseq <- FindVariableFeatures(celseq, selection.method = \"vst\", nfeatures = 2000)\ncelseq <- ScaleData(celseq)\ncelseq[[\"tech\"]] <- \"celseq\"\n\n# CEL-Seq2 https://www.cell.com/molecular-cell/fulltext/S1097-2765(09)00641-8\n# In subset, use low.thresholds = 2500.\ncelseq2 <- CreateSeuratObject(counts = celseq2.data)\nVlnPlot(celseq2, \"nFeature_RNA\")\ncelseq2 <- subset(celseq2, subset = nFeature_RNA > 2500)\nVlnPlot(celseq2, \"nFeature_RNA\")\ncelseq2 <- NormalizeData(celseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\ncelseq2 <- FindVariableFeatures(celseq2, selection.method = \"vst\", nfeatures = 2000)\ncelseq2 <- ScaleData(celseq2)\ncelseq2[[\"tech\"]] <- \"celseq2\"\n\n# Fluidigm C1\n# Omit subset function because cells are already high quality.\nfluidigmc1 <- CreateSeuratObject(counts = fluidigmc1.data)\nVlnPlot(fluidigmc1, \"nFeature_RNA\")\nfluidigmc1 <- NormalizeData(fluidigmc1, normalization.method = \"LogNormalize\", scale.factor = 10000)\nfluidigmc1 <- FindVariableFeatures(fluidigmc1, selection.method = \"vst\", nfeatures = 2000)\nfluidigmc1 <- ScaleData(fluidigmc1)\nfluidigmc1[[\"tech\"]] <- \"fluidigmc1\"\n\n# SMART-Seq2\n# In subset, use low.thresholds = 2500.\nsmartseq2 <- CreateSeuratObject(counts = smartseq2.data)\nVlnPlot(smartseq2, \"nFeature_RNA\")\nsmartseq2 <- subset(smartseq2, subset = nFeature_RNA > 2500)\nVlnPlot(smartseq2, \"nFeature_RNA\")\nsmartseq2 <- NormalizeData(smartseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\nsmartseq2 <- FindVariableFeatures(smartseq2, selection.method = \"vst\", nfeatures = 2000)\nsmartseq2 <- ScaleData(smartseq2)\nsmartseq2[[\"tech\"]] <- \"smartseq2\"\n\n# This code sub-samples the data in order to speed up calculations and not use too much memory.\nIdents(celseq) <- \"tech\"\ncelseq <- subset(celseq, downsample = 500, seed = 1)\nIdents(celseq2) <- \"tech\"\ncelseq2 <- subset(celseq2, downsample = 500, seed = 1)\nIdents(fluidigmc1) <- \"tech\"\nfluidigmc1 <- subset(fluidigmc1, downsample = 500, seed = 1)\nIdents(smartseq2) <- \"tech\"\nsmartseq2 <- subset(smartseq2, downsample = 500, seed = 1)\n\n# Save the sub-sampled Seurat objects\nsave(celseq, celseq2, fluidigmc1, smartseq2, file = Rda.sparse.path)"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#cluster-pancreatic-datasets-without-batch-correction",
    "href": "content/day3/Lab6_batch_correction.html#cluster-pancreatic-datasets-without-batch-correction",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.4 Cluster pancreatic datasets without batch correction",
    "text": "11.4 Cluster pancreatic datasets without batch correction\nLet us cluster all the pancreatic islet datasets together and see whether there is a batch effect.\n\n\n\nR\n\nload(Rda.sparse.path)\n\n# Merge Seurat objects. Original sample identities are stored in gcdata[[\"tech\"]].\n# Cell names will now have the format tech_cellID (smartseq2_cell1...)\nadd.cell.ids <- c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\")\ngcdata <- merge(x = celseq, y = list(celseq2, fluidigmc1, smartseq2), add.cell.ids = add.cell.ids, merge.data = FALSE)\nIdents(gcdata) <- \"tech\"  # use identity based on sample identity\n\n# Look at how the number of genes per cell varies across the different technologies.\nVlnPlot(gcdata, \"nFeature_RNA\", group.by = \"tech\")\n\n# The merged data must be normalized and scaled (but you only need to scale the variable genes). \n# Let us also find the variable genes again this time using all the pancreas data.\ngcdata <- NormalizeData(gcdata, normalization.method = \"LogNormalize\", scale.factor = 10000)\nvar.genes <- SelectIntegrationFeatures(SplitObject(gcdata, split.by = \"tech\"), nfeatures = 2000, verbose = TRUE, fvf.nfeatures = 2000, selection.method = \"vst\")\nVariableFeatures(gcdata) <- var.genes\ngcdata <- ScaleData(gcdata, features = VariableFeatures(gcdata))\n\n# Do PCA on data including only the variable genes.\ngcdata <- RunPCA(gcdata, features = VariableFeatures(gcdata), npcs = 40, ndims.print = 1:5, nfeatures.print = 5)\n\n# Color the PC biplot by the scRNA-seq technology. Hint: use DimPlot\n# Which technologies look similar to one another?\nDimPlot(gcdata, reduction = \"pca\", dims = c(1, 2), group.by = \"tech\")\n\n# Cluster the cells using the first twenty principal components.\ngcdata <- FindNeighbors(gcdata, reduction = \"pca\", dims = 1:20, k.param = 20)\ngcdata <- FindClusters(gcdata, resolution = 0.8, algorithm = 1, random.seed = 100)\n\n# Create a UMAP visualization. \ngcdata <- RunUMAP(gcdata, dims = 1:20, reduction = \"pca\", n.neighbors = 15, min.dist = 0.5, spread = 1, metric = \"euclidean\", seed.use = 1)  \n\n# Visualize the Leiden clustering and the batches on the UMAP. \n# Remember, the clustering is stored in @meta.data in column seurat_clusters and the technology is\n# stored in the column tech. Remember you can also use DimPlot\nDimPlot(gcdata, reduction = \"umap\", group.by = \"seurat_clusters\")\nDimPlot(gcdata, reduction = \"umap\", group.by = \"tech\")\n\n# Are you surprised by the results? Compare to your expectations from the PC biplot of PC1 vs PC2.\n# What explains these results?\n\n# Adjusted rand index test for overlap between technology and cluster labelings. \n# This goes between 0 (completely dissimilar clustering) to 1 (identical clustering). \n# The adjustment corrects for chance grouping between cluster elements.\n# https://davetang.org/muse/2017/09/21/adjusted-rand-index/\nari <- dplyr::select(gcdata[[]], tech, seurat_clusters)\nari$tech <- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$seurat_clusters))\n\n# Save current progress.\nsave(gcdata, file = Rda.path)\n# To load the data, run the following command.\n# load(Rda.path)\n\n\n\n11.4.1 Batch correction: canonical correlation analysis (CCA)+ mutual nearest neighbors (MNN) using Seurat v3\nHere we use Seurat v3 to see to what extent it can remove potential batch effects.\n\n\n\nR\n\nload(Rda.sparse.path)\n\n# The first piece of code will identify variable genes that are highly variable in at least 2/4 datasets. We will use these variable genes in our batch correction.\n# Why would we implement such a requirement?\nob.list <- list(celseq, celseq2, fluidigmc1, smartseq2)\n\n# Identify anchors on the 4 pancreatic islet datasets, commonly shared variable genes across samples, \n# and integrate samples.\ngcdata.anchors <- FindIntegrationAnchors(object.list = ob.list, anchor.features = 2000, dims = 1:30)\ngcdata <- IntegrateData(anchorset = gcdata.anchors, dims = 1:30)\nDefaultAssay(gcdata) <- \"integrated\"\n\n# Run the standard workflow for visualization and clustering.\n# The integrated data object only stores the commonly shared variable genes.\ngcdata <- ScaleData(gcdata, do.center = T, do.scale = F)\ngcdata <- FindVariableFeatures(gcdata)\ngcdata <- RunPCA(gcdata, npcs = 40, ndims.print = 1:5, nfeatures.print = 5)\nDimPlot(gcdata, dims = c(1, 2), reduction = \"pca\", split.by = \"tech\")\n\n# Clustering. Choose the dimensional reduction type to use and the number of aligned \n# canonical correlation vectors to use.\ngcdata <- FindNeighbors(gcdata, reduction = \"pca\", dims = 1:20, k.param = 20)\ngcdata <- FindClusters(gcdata, resolution = 0.8, algorithm = 1, random.seed = 100)\n\n# UMAP. Choose the dimensional reduction type to use and the number of aligned \n# canonical correlation vectors to use.\ngcdata <- RunUMAP(gcdata, dims = 1:30, reduction = \"pca\", n.neighbors = 15, min.dist = 0.5, spread = 1, metric = \"euclidean\", seed.use = 1)  \n\n# After data integration, use the original expression data in all visualization and DE tests.\n# The integrated data must not be used in DE tests as it violates assumptions of independence in DE tests!\nDefaultAssay(gcdata) <- \"RNA\"  \n\n# Visualize the Louvain clustering and the batches on the UMAP. \n# Remember, the clustering is stored in @meta.data in column seurat_clusters \n# and the technology is stored in the column tech. Remember you can also use DimPlot.\np1 <- DimPlot(gcdata, reduction = \"umap\", group.by = \"seurat_clusters\")\np2 <- DimPlot(gcdata, reduction = \"umap\", group.by = \"tech\")\np1 + p2\n\n# Let's look to see how the adjusted rand index changed compared to using no batch correction.\nari <- dplyr::select(gcdata[[]], tech, seurat_clusters)\nari$tech <- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$seurat_clusters))\n\n# We can also identify conserved marker genes across the batches. Differential gene expression is\n# done across each batch, and the p-values are combined. (requires metap packge installation)\nmarkers <- FindConservedMarkers(gcdata, ident.1 = 0, grouping.var = \"tech\", assay = \"RNA\", print.bar = T)\nhead(markers)\n\n# Visualize the expression of the first 5 marker genes on UMAP across the different batches using DoHeatmap.\ngcdata <- ScaleData(gcdata, features = rownames(gcdata), do.center = T, do.scale = F)\nDoHeatmap(gcdata, features = rownames(markers)[1:5], group.by = \"tech\", disp.max = 3)\n\n# Markers for pancreatic cells from \"A Single-Cell Transcriptome Atlas of the \n# Human Pancreas\".https://www.cell.com/cell-systems/pdfExtended/S2405-4712(16)30292-7\ngenes <- c(\"GCG\", \"INS\", \"SST\", \"PPY\", \"PRSS1\", \"KRT19\", \"PECAM1\", \"COL1A1\")\nFeaturePlot(gcdata, genes, ncol = 4)\n\n# Save current progress.\nsave(gcdata, file = Rda.Seurat3.path)\n# To load the data, run the following command.\n# load(Rda.Seurat3.path)\n\n\n\n11.4.2 Batch correction: integrative non-negative matrix factorization (NMF) using LIGER\nHere we use integrative non-negative matrix factorization to see to what extent it can remove potential batch effects.\nThe important parameters in the batch correction are the number of factors (k), the penalty parameter (lambda), and the clustering resolution. The number of factors sets the number of factors (consisting of shared and dataset-specific factors) used in factorizing the matrix. The penalty parameter sets the balance between factors shared across the batches and factors specific to the individual batches. The default setting of lambda=5.0 is usually used by the Macosko lab. Resolution=1.0 is used in the Louvain clustering of the shared neighbor factors that have been quantile normalized.\n\n\n\nR\n\nload(Rda.sparse.path)\n\nob.list <- list(\"celseq\" = celseq, \"celseq2\" = celseq2, \"fluidigmc1\" = fluidigmc1, \"smartseq2\" = smartseq2)\n\n# Identify variable genes that are variable across most samples.\nvar.genes <- SelectIntegrationFeatures(ob.list, nfeatures = 2000, verbose = TRUE, fvf.nfeatures = 2000, selection.method = \"vst\")\n\n# Next we create a LIGER object with raw counts data from each batch.\ndata.liger <- createLiger(sapply(ob.list, function(data) data[['RNA']]@counts[, colnames(data)]), remove.missing = F) \n\n# Normalize gene expression for each batch.\ndata.liger <- rliger::normalize(data.liger)\n\n# Use my method or Liger method for selecting variable genes (var.thresh changes number of variable genes).\ndata.liger@var.genes <- var.genes\n# data.liger <- selectGenes(data.liger, var.thresh = 0.1, do.plot = F)\n\n# Print out the number of variable genes for LIGER analysis.\nprint(length(data.liger@var.genes))\n\n# Scale the gene expression across the datasets. \n# Why does LIGER not center the data? Hint, think about the use of \n# non-negative matrix factorization and the constraints that this imposes.\ndata.liger <- scaleNotCenter(data.liger)\n\n# These two steps take 10-20 min. Only run them if you finish with the rest of the code.\n# Use the `suggestK` function to determine the appropriate number of factors to use.\n# Use the `suggestLambda` function to find the smallest lambda for which the alignment metric stabilizes.\n# k.suggest <- suggestK(data.liger, k.test = seq(5, 30, 5), plot.log2 = T)\n# lambda.suggest <- suggestLambda(gcdata.liger, k.suggest)\n\n# Use alternating least squares (ALS) to factorize the matrix.\n# Next, quantile align the factor loadings across the datasets, and do clustering.\nk.suggest <- 20  # with this line, we do not use the suggested k by suggestK()\nlambda.suggest <- 5  # with this line, we do not use the suggested lambda by suggestLambda()\nset.seed(100)  # optimizeALS below is stochastic\ndata.liger <- optimizeALS(data.liger, k = k.suggest, lamda = lambda.suggest) \n\n# What do matrices H, V, and W represent, and what are their dimensions?\ndim(data.liger@H$celseq)\ndim(data.liger@V$celseq)\ndim(data.liger@W)\n\n# Next, do clustering of cells in shared nearest factor space.\n# Build SNF graph, do quantile normalization, cluster quantile normalized data\ndata.liger <- quantileAlignSNF(data.liger, resolution = 1)  # SNF clustering and quantile alignment\n\n# What are the dimensions of H.norm. What does this represent? \ndim(data.liger@H.norm)\n\n# Let's see what the liger data looks like mapped onto a UMAP visualization.\ndata.liger <- runUMAP(data.liger, n_neighbors = 15, min_dist = 0.5)  # conda install -c conda-forge umap-learn\np <- plotByDatasetAndCluster(data.liger, return.plots = T) \nprint(p[[1]])  # plot by dataset\nplot_grid(p[[1]], p[[2]])\n\n# Let's look to see how the adjusted rand index changed compared to using no batch correction.\ntech <- unlist(lapply(1:length(data.liger@H), function(x) { \n  rep(names(data.liger@H)[x], nrow(data.liger@H[[x]]))}))\nclusters <- data.liger@clusters\nari <- data.frame(\"tech\" = tech, \"clusters\" = clusters)\nari$tech <- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$clusters))\n\n# Look at genes that are specific to a dataset and shared across datasets.\n# Use the plotWordClouds function and choose 2 datasets.\npdf(paste0(writedir, \"word_clouds.pdf\"))\nplotWordClouds(data.liger, dataset1 = \"celseq2\", dataset2 = \"smartseq2\")\ndev.off()\n\n# Look at factor loadings for each cell using plotFactors. \npdf(paste0(writedir, \"plot_factors.pdf\"))\nplotFactors(data.liger)\ndev.off()\n\n# Identify shared and batch-specific marker genes from liger factorization.\n# Use the getFactorMarkers function and choose 2 datasets.\n# Then plot some genes of interest using plotGene.\nmarkers <- getFactorMarkers(data.liger, dataset1 = \"celseq2\", dataset2 = \"smartseq2\", num.genes = 10)\nplotGene(data.liger, gene = \"INS\", pt.size = 1)\n\n# Save current progress.\nsave(data.liger, file = Rda.liger.path)\n# To load the data, run the following command.\n# load(Rda.liger.path)"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#additional-exploration",
    "href": "content/day3/Lab6_batch_correction.html#additional-exploration",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.5 Additional exploration",
    "text": "11.5 Additional exploration\n\n11.5.1 Regressing out unwanted covariates\nLearn how to regress out different technical covariates (number of UMIs, number of genes, percent mitochondrial reads) by studying Seurat’s PBMC tutorial and the ScaleData() function.\n\n\n\n\n11.5.2 kBET\nWithin your RStudio session, install k-nearest neighbour batch effect test and learn how to use its functionality to quantify batch effects in the pancreatic data.\n\n\n\n\n11.5.3 Seurat v4\nRead how the new version of Seurat does data integration"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#acknowledgements",
    "href": "content/day3/Lab6_batch_correction.html#acknowledgements",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.6 Acknowledgements",
    "text": "11.6 Acknowledgements\nThis document builds off a tutorial from the Seurat website and a tutorial from the LIGER website."
  },
  {
    "objectID": "content/day4/Lecture6_pseudotime.html",
    "href": "content/day4/Lecture6_pseudotime.html",
    "title": "12  Lecture 6 - Trajectories and pseudotimes",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/day3/Lab6_batch_correction.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\"><span class='chapter-number'>11</span>  <span class='chapter-title'>Lab 6 - Batch correction</span></span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/day4/Lab7_pseudotime.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\"><span class='chapter-number'>13</span>  <span class='chapter-title'>Lab 7: Pseudotime analyses</span></span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#process-testis-data-in-r",
    "href": "content/day4/Lab7_pseudotime.html#process-testis-data-in-r",
    "title": "\n13  Lab 7: Pseudotime analyses\n",
    "section": "\n13.1 Process testis data in R",
    "text": "13.1 Process testis data in R\n\n13.1.1 Import testis data from GSE112013 and pre-process it\nThe workflow we have covered in the previous days can be reused here.\n\nImport testis dataset in R, remove doublets, filter genes, normalize counts, correct for batch effect and cluster cells.\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\nlibrary(tidyverse)\n\n# Download raw file\ndir.create('Guo_testis')\ndownload.file(\n    'https://ftp.ncbi.nlm.nih.gov/geo/series/GSE112nnn/GSE112013/suppl/GSE112013_Combined_UMI_table.txt.gz', \n    'Guo_testis/GSE112013_Combined_UMI_table.txt.gz'\n)\nsystem('gunzip Guo_testis/GSE112013_Combined_UMI_table.txt.gz')\n\n# Create SingleCellExperiment object\nx <- vroom::vroom('Guo_testis/GSE112013_Combined_UMI_table.txt')\ncounts <- as.matrix(x[, -1])\ncounts <- as(counts, 'dgCMatrix')\ngenes <- as.data.frame(x[, 1])\ncells <- data.frame(cellid = colnames(x[, -1]))\ntestis <- SingleCellExperiment(\n    assays = list(counts = counts), \n    colData = cells, \n    rowData = genes\n)\ntestis$Barcode <- str_replace(testis$cellid, 'Donor.-', '') |> str_replace('-.', '')\ntestis <- testis[, !duplicated(testis$Barcode)]\ntestis$donor <- str_replace(testis$cellid, '-.*', '')\ntestis$replicate <- str_replace(testis$cellid, '.*-', '')\nrownames(testis) <- rowData(testis)$Gene\nset.seed(1000)\n\n# Remove doublets\ntestis <- scDblFinder::scDblFinder(testis)\ntestis <- testis[, testis$scDblFinder.class == 'singlet']\n\n# Recover human genomic, protein-coding gene informations\nlibrary(plyranges)\nah <- AnnotationHub::AnnotationHub()\nAnnotationHub::query(ah, c('gene annotation', 'ensembl', '102', 'homo_sapiens', 'GRCh38'))\ngtf <- AnnotationHub::query(ah, c('Homo_sapiens.GRCh38.102.chr.gtf'))[[1]]\ngenes <- gtf |> \n    filter(type == 'gene') |> \n    filter(gene_biotype == 'protein_coding') |> \n    filter(gene_source == 'ensembl_havana') \ngenes <- genes[!duplicated(genes$gene_name)]\n\n# Annotate genes in testis dataset and filter out non-relevant genes\ntestis <- testis[genes$gene_name[genes$gene_name %in% rownames(testis)], ]\nrowRanges(testis) <- genes[match(rownames(testis), genes$gene_name)]\nrowData(testis) <- rowData(testis)[, c('gene_name', 'gene_id')]\nrownames(testis) <- scuttle::uniquifyFeatureNames(rowData(testis)$gene_id, rowData(testis)$gene_name)\n\n# Get preliminary QCs per cell and per gene\ntestis <- scuttle::addPerCellQCMetrics(testis)\ntestis <- scuttle::addPerFeatureQCMetrics(testis)\n\n# Filter out genes not expressed in at least 10 cells\ntestis <- testis[rowSums(assay(testis, 'counts') > 0) >= 10, ]\n\n# Normalize counts using VST\ncnts <- as(assay(testis, 'counts'), 'dgCMatrix')\ncolnames(cnts) <- testis$cellid\nrownames(cnts) <- rownames(testis)\ntestis_vst <- sctransform::vst(cnts, return_cell_attr = TRUE)\ncorrected_cnts <- sctransform::correct(testis_vst)\nassay(testis, 'corrected_counts', withDimnames = FALSE) <- corrected_cnts\nassay(testis, 'logcounts', withDimnames = FALSE) <- log1p(corrected_cnts)\n\n# Computing biological variance of each gene\ntestis_variance <- scran::modelGeneVar(testis)\nHVGs <- scran::getTopHVGs(testis_variance, prop = 0.1)\nrowData(testis)$isHVG <- rownames(testis) %in% HVGs\n\n# Embedding dataset in PCA space, correcting for batch effect\nmergedBatches <- batchelor::fastMNN(\n    testis, \n    batch = testis$donor, \n    subset.row = HVGs, \n    BPPARAM = BiocParallel::MulticoreParam(workers = 12)\n)\nreducedDim(testis, 'corrected') <- reducedDim(mergedBatches, 'corrected')\n\n# Embedding dataset in shared k-nearest neighbors graph for clustering \ngraph <- scran::buildSNNGraph(testis, use.dimred = 'corrected')\n\n# Cluster cells using Louvain community finding algorithm\ntestis_clust <- igraph::cluster_louvain(graph)$membership\ntable(testis_clust)\ntestis$cluster <- factor(testis_clust)\n\n# Embedding dataset in TSNE space for visualization\nset.seed(10)\ntestis <- scater::runTSNE(testis, dimred = 'corrected')\n\n# Visualize embeddings\np <- cowplot::plot_grid(\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'cluster'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'cluster')\n)\n\n\n\n13.1.2 Annotate cells using HPA resources\n\nLoad HPA data from internet.\nTry to format it as a SummarizedExperiment.\nWhat celltypes are profiled?\n\n\n\n\nR\n\ndownload.file(\n    'https://www.proteinatlas.org/download/rna_single_cell_type.tsv.zip', \n    'Guo_testis/rna_single_cell_type.tsv.zip'\n)\nsystem('unzip Guo_testis/rna_single_cell_type.tsv.zip')\nsystem('mv rna_single_cell_type.tsv Guo_testis/')\nHPA <- vroom::vroom('Guo_testis/rna_single_cell_type.tsv') |> \n    pivot_wider(names_from = `Cell type`, values_from = 'nTPM') |> \n    dplyr::select(-Gene) |> \n    distinct(`Gene name`, .keep_all = TRUE) |> \n    column_to_rownames('Gene name')\nHPA_se <- SummarizedExperiment::SummarizedExperiment(HPA, colData = tibble(cell_type = colnames(HPA)), assays = list('logcounts' = HPA))\n\n\n\nUse these cell type profiles to annotate cell types in the testis dataset.\n\n\n\n\nR\n\n# Transfer annotations to `testis`\npredictions <- SingleR::SingleR(\n    test = testis, \n    ref = HPA_se, \n    labels = colData(HPA_se)$cell_type, \n    clusters = testis$cluster\n)\ntestis$annotation <- predictions$labels[testis$cluster]\np <- cowplot::plot_grid(\n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, PCA, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'annotation', text_by = 'annotation') + ggtitle('PCA, Annotations transferred from HPA'),\n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, tSNE, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'annotation', text_by = 'annotation') + ggtitle('tSNE, Annotations transferred from HPA')\n)\n\n\n\n13.1.3 Filter the testis dataset to only germinal cells.\n\n\n\nR\n\ngermcells <- testis[\n    , \n    testis$annotation %in% c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")\n]"
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "href": "content/day4/Lab7_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "title": "\n13  Lab 7: Pseudotime analyses\n",
    "section": "\n13.2 Trajectory inference (TI) in scRNAseq",
    "text": "13.2 Trajectory inference (TI) in scRNAseq\nAn important question in scRNAseq field of research is: how to identify a cell trajectory from high-dimensional expression data and map individual cells onto it? A large number of methods have currently emerged, each one with their own specificities, assumptions, and strengths. A nice breakdown (from 2019, so already very outdated!) is available from Saelens et al., Nat. Biotech. 2018 (doi: 10.1038/s41587-019-0071-9):\n\n\n13.2.1 Trajectory\nSlingshot is perhaps one of the most widely used algorithms for users who want to focus on R-based approaches.\n\nRead Slingshot documentation to understand how to identify lineages in a scRNAseq dataset in R\nWhy is it recommended to infer lineages from PCA space rather than t-SNE or UMAP space, even though these spaces do “reveal” an obvious trajectory in 2D?\nInfer lineages, using cluster annotations as information to build the MST. Note that you will first need to remove the 50th PCA dimension for slingshot to work (bug reported).\n\n\n\n\nR\n\nreducedDim(germcells, 'corrected_2') <- reducedDim(germcells, 'corrected')[, 1:49]\ngermcells_slingshot <- slingshot::slingshot(\n    germcells, \n    reducedDim = 'corrected_2', \n    clusterLabels = germcells$annotation\n)\nslingshot::slingLineages(germcells_slingshot)\n\n\n\n13.2.2 Pseudotime\n\nRecover pseudotime values and principal curves from slingshot output\n\n\n\n\nR\n\ngermcells$pseudotime <- slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']\npca_curve <- slingshot::slingCurves(germcells_slingshot, as.df = TRUE)\ncolnames(pca_curve) <- paste0('PC', 1:ncol(pca_curve))\ntsne_curve <- slingshot::embedCurves(germcells_slingshot, 'TSNE', smoother = 'loess', span = 0.1) |> slingshot::slingCurves(as.df = TRUE)\ntsne_curve <- tsne_curve[order(tsne_curve$Order), ]\ncolnames(tsne_curve) <- paste0('TSNE', 1:ncol(tsne_curve))\n\n\n\nPlot PCA and tSNE embeddings, coloring cells by either their annotation or their pseudotime value. Overlay the principal curves to each embedding\n\n\n\n\nR\n\ndf <- tibble(\n    PC1 = reducedDim(germcells, 'corrected')[,1], \n    PC2 = reducedDim(germcells, 'corrected')[,2], \n    TSNE1 = reducedDim(germcells, 'TSNE')[,1], \n    TSNE2 = reducedDim(germcells, 'TSNE')[,2], \n    annotation = germcells$annotation, \n    pseudotime = germcells$pseudotime\n)\np <- cowplot::plot_grid(\n    df |> \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = annotation)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |> \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = annotation)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |> \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = pseudotime)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |> \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = pseudotime)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed()\n)\n\n\n\nCheck the distribution of pseudotime values across the different cell clusters.\nWhat do you observe? Where you expecting this?\n\n\n\n\nR\n\np <- tibble(\n    annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n    pseudotime = germcells$pseudotime\n) |> \n    ggplot(aes(x = annotation, y = pseudotime, fill = annotation)) + \n    geom_violin(scale = 'width') + \n    geom_boxplot(outlier.shape = NULL, width = 0.1, fill = 'white') + \n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) \n\n\n\nCorrect pseudotime values as you would expect it to be.\n\n\n\n\nR\n\ngermcells$pseudotime <- scales::rescale((-1 * slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']), c(0, 1))\n\n\n\n13.2.3 BONUS: Daunting snippet but that makes a cool figure for a paper: modeling pseudotime-dependent gene expression\nUsing pseudotime / cell, one can model gene expression along the differentiation process. This alleviates the need to study gene expression per cell, and allows one to focus on process-related effects (e.g. gene expression during a developmental trajectory).\n\nTry to do so for few markers of spermatogonia, spermatocytes and spermatids.\n\n\n\n\nR\n\ngenes <- c('ID4', 'SYCP3', 'DMC1', 'ACR', 'PRM1', 'PGK2')\nfitExprs <- logcounts(germcells[genes, ]) |> # ----------------------------------- Get norm. counts for genes of interest\n    as.matrix() |> \n    t() |> \n    as_tibble() |> \n    mutate(  # ----------------------------------------------------------------- Add information for each cell\n        cellID = colnames(germcells), \n        annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n        pseudotime = germcells$pseudotime\n    ) |> \n    pivot_longer(contains(genes), names_to = 'gene', values_to = 'obs_expr') |> # - Pivot in \"long\" tidy format \n    mutate(gene = factor(gene, genes)) |> \n    group_by(gene) |> # ------------------------------------------------------- Group rows by genes\n    nest(.key = 'data') |> # -------------------------------------------------- For each gene, extract the subtable into a column named data\n    mutate(\n        gamModel = map(data, ~mgcv::gam(obs_expr ~ s(pseudotime, bs = \"cs\"), data = .)), \n        gamFitted_expr = map(gamModel, predict) # ------------------------------ For each gene, fit the expression values ~ pseudotime with a GAM\n    ) |> \n    dplyr::select(-ends_with('Model')) |> \n    unnest(c(data, ends_with('_expr'))) # -------------------------------------- Unnest all the modelled expressions\np <- ggplot(fitExprs) + \n    geom_point(aes(x = pseudotime, y = obs_expr, col = annotation), alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = 'white', size = 2, alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = '#af2d0c', size = 1) +\n    theme_bw() + \n    facet_grid(gene~., scales = 'free') + \n    labs(y = 'logcounts') + \n    ggtitle('Fitted models of pseudotime-dependent gene expression')"
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "href": "content/day4/Lab7_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "title": "\n13  Lab 7: Pseudotime analyses\n",
    "section": "\n13.3 Ordering trajectory with RNA velocity",
    "text": "13.3 Ordering trajectory with RNA velocity\nAs we saw earlier, TI does not necessarily know which direction is right for a given trajectory. This orientation can be sometimes refined using RNA velocity. Let’s see whether RNA velocity helps orientating our spermatocyte differentiation lineage trajectory here.\n\nRead velociraptor documentation. What do you need to compute RNA velocity scores in R?\nImport spliced and unspliced counts computed with velocyto in R.\nTry and compute RNA velocity.\n\n\n\n\nR\n\n## - Import entire GSE112013 dataset with spliced/unspliced counts \nfull_GSE112013_counts <- LoomExperiment::import('Share/Guo_testis/Guo_testis_full-counts.loom')\n## - Filter `germcells` genes and cells to only retain those present in `full_GSE112013_counts`\ngermcells <- germcells[\n    rowData(germcells)$gene_id %in% rowData(full_GSE112013_counts)$Accession, \n    germcells$Barcode %in% full_GSE112013_counts$Barcode\n]\n## - Reorder rows of `full_GSE112013_counts_germcells` to match those of `germcells`\nfull_GSE112013_counts_germcells <- full_GSE112013_counts[match(rowData(germcells)$gene_id, rowData(full_GSE112013_counts)$Accession), match(germcells$Barcode, full_GSE112013_counts$Barcode)]\ndim(germcells)\ndim(full_GSE112013_counts_germcells)\n## - Add spliced/unspliced counts to germcells\nassay(germcells, 'spliced', withDimnames=FALSE) <- assay(full_GSE112013_counts_germcells, 'spliced')\nassay(germcells, 'unspliced', withDimnames=FALSE) <- assay(full_GSE112013_counts_germcells, 'unspliced')\n## - Run velociraptor\nvelo_out <- velociraptor::scvelo(\n    germcells, \n    assay.X = \"counts\", \n    subset.row = rowData(germcells)$isHVG, \n    use.dimred = \"corrected\"\n)\nvelo_out\n\n\n\nEmbed the velocity field in tSNE scRNAseq embedding and plot the RNA velocity field on top of tSNE projection. Conclude.\n\n\n\n\nR\n\nembedded_velo <- velociraptor::embedVelocity(reducedDim(germcells, \"TSNE\"), velo_out)\nhead(embedded_velo)\ngrid_df <- velociraptor::gridVectors(reducedDim(germcells, \"TSNE\"), embedded_velo, resolution = 30, scale = TRUE)\nhead(grid_df)\np <- scater::plotReducedDim(germcells, 'TSNE', colour_by = \"annotation\", point_alpha = 0.5) +\n    geom_segment(\n        data = grid_df, \n        mapping = aes(x = start.1, y = start.2, xend = end.1, yend = end.2), \n        arrow = arrow(length = unit(0.05, \"inches\"), type = \"closed\")\n    )"
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#session-info",
    "href": "content/day4/Lab7_pseudotime.html#session-info",
    "title": "\n13  Lab 7: Pseudotime analyses\n",
    "section": "\n13.4 Session info",
    "text": "13.4 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21)\n os       macOS Monterey 12.5.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_GB.UTF-8\n ctype    en_GB.UTF-8\n tz       Europe/Paris\n date     2023-06-07\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package                * version   date (UTC) lib source\n AnnotationDbi          * 1.61.0    2022-11-01 [1] Bioconductor\n AnnotationHub          * 3.7.3     2023-03-01 [1] Bioconductor\n Biobase                * 2.59.0    2022-11-01 [1] Bioconductor\n BiocFileCache          * 2.7.2     2023-02-17 [1] Bioconductor\n BiocGenerics           * 0.45.0    2022-11-01 [1] Bioconductor\n BiocManager            * 1.30.20   2023-02-24 [1] CRAN (R 4.3.0)\n BiocVersion              3.17.1    2022-12-20 [1] Bioconductor\n Biostrings               2.67.0    2022-11-01 [1] Bioconductor\n bit                      4.0.5     2022-11-15 [1] CRAN (R 4.3.0)\n bit64                    4.0.5     2020-08-30 [1] CRAN (R 4.3.0)\n bitops                   1.0-7     2021-04-24 [1] CRAN (R 4.3.0)\n blob                     1.2.3     2022-04-10 [1] CRAN (R 4.3.0)\n cachem                   1.0.7     2023-02-24 [1] CRAN (R 4.3.0)\n callr                    3.7.3     2022-11-02 [1] CRAN (R 4.3.0)\n cli                      3.6.0     2023-01-09 [1] CRAN (R 4.3.0)\n colorspace               2.1-0     2023-01-23 [1] CRAN (R 4.3.0)\n cowplot                * 1.1.1     2020-12-30 [1] CRAN (R 4.3.0)\n crayon                   1.5.2     2022-09-29 [1] CRAN (R 4.3.0)\n curl                     5.0.0     2023-01-12 [1] CRAN (R 4.3.0)\n DBI                      1.1.3     2022-06-18 [1] CRAN (R 4.3.0)\n dbplyr                 * 2.3.1     2023-02-24 [1] CRAN (R 4.3.0)\n devtools                 2.4.5     2022-10-11 [1] CRAN (R 4.3.0)\n digest                   0.6.31    2022-12-11 [1] CRAN (R 4.3.0)\n dplyr                  * 1.1.0     2023-01-29 [1] CRAN (R 4.3.0)\n ellipsis                 0.3.2     2021-04-29 [1] CRAN (R 4.3.0)\n evaluate                 0.20      2023-01-17 [1] CRAN (R 4.3.0)\n fansi                    1.0.4     2023-01-22 [1] CRAN (R 4.3.0)\n fastmap                  1.1.1     2023-02-24 [1] CRAN (R 4.3.0)\n filelock                 1.0.2     2018-10-05 [1] CRAN (R 4.3.0)\n forcats                * 1.0.0     2023-01-29 [1] CRAN (R 4.3.0)\n fs                       1.6.1     2023-02-06 [1] CRAN (R 4.3.0)\n generics                 0.1.3     2022-07-05 [1] CRAN (R 4.3.0)\n GenomeInfoDb             1.35.15   2023-02-03 [1] Bioconductor\n GenomeInfoDbData         1.2.9     2022-11-04 [1] Bioconductor\n ggplot2                * 3.4.1     2023-02-10 [1] CRAN (R 4.3.0)\n glue                     1.6.2     2022-02-24 [1] CRAN (R 4.3.0)\n gtable                   0.3.1     2022-09-01 [1] CRAN (R 4.3.0)\n hms                      1.1.2     2022-08-19 [1] CRAN (R 4.3.0)\n htmltools                0.5.4     2022-12-07 [1] CRAN (R 4.3.0)\n htmlwidgets              1.6.1     2023-01-07 [1] CRAN (R 4.3.0)\n httpuv                   1.6.9     2023-02-14 [1] CRAN (R 4.3.0)\n httr                     1.4.5     2023-02-24 [1] CRAN (R 4.3.0)\n interactiveDisplayBase   1.37.0    2022-11-01 [1] Bioconductor\n IRanges                * 2.33.0    2022-11-01 [1] Bioconductor\n jsonlite                 1.8.4     2022-12-06 [1] CRAN (R 4.3.0)\n KEGGREST                 1.39.0    2022-11-01 [1] Bioconductor\n knitr                    1.42      2023-01-25 [1] CRAN (R 4.3.0)\n later                    1.3.0     2021-08-18 [1] CRAN (R 4.3.0)\n lattice                  0.21-8    2023-04-05 [2] CRAN (R 4.3.0)\n lifecycle                1.0.3     2022-10-07 [1] CRAN (R 4.3.0)\n lubridate              * 1.9.2     2023-02-10 [1] CRAN (R 4.3.0)\n magrittr                 2.0.3     2022-03-30 [1] CRAN (R 4.3.0)\n Matrix                   1.5-4     2023-04-04 [2] CRAN (R 4.3.0)\n memoise                  2.0.1     2021-11-26 [1] CRAN (R 4.3.0)\n mgcv                   * 1.8-42    2023-03-02 [2] CRAN (R 4.3.0)\n mime                     0.12      2021-09-28 [1] CRAN (R 4.3.0)\n miniUI                   0.1.1.1   2018-05-18 [1] CRAN (R 4.3.0)\n munsell                  0.5.0     2018-06-12 [1] CRAN (R 4.3.0)\n nlme                   * 3.1-162   2023-01-31 [2] CRAN (R 4.3.0)\n pillar                   1.8.1     2022-08-19 [1] CRAN (R 4.3.0)\n pkgbuild                 1.4.0     2022-11-27 [1] CRAN (R 4.3.0)\n pkgconfig                2.0.3     2019-09-22 [1] CRAN (R 4.3.0)\n pkgload                  1.3.2     2022-11-16 [1] CRAN (R 4.3.0)\n png                      0.1-8     2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits              1.1.1     2020-01-24 [1] CRAN (R 4.3.0)\n processx                 3.8.0     2022-10-26 [1] CRAN (R 4.3.0)\n profvis                  0.3.7     2020-11-02 [1] CRAN (R 4.3.0)\n promises                 1.2.0.1   2021-02-11 [1] CRAN (R 4.3.0)\n ps                       1.7.2     2022-10-26 [1] CRAN (R 4.3.0)\n purrr                  * 1.0.1     2023-01-10 [1] CRAN (R 4.3.0)\n R6                       2.5.1     2021-08-19 [1] CRAN (R 4.3.0)\n rappdirs                 0.3.3     2021-01-31 [1] CRAN (R 4.3.0)\n Rcpp                     1.0.10    2023-01-22 [1] CRAN (R 4.3.0)\n RCurl                    1.98-1.10 2023-01-27 [1] CRAN (R 4.3.0)\n readr                  * 2.1.4     2023-02-10 [1] CRAN (R 4.3.0)\n remotes                  2.4.2     2021-11-30 [1] CRAN (R 4.3.0)\n rlang                    1.0.6     2022-09-24 [1] CRAN (R 4.3.0)\n rmarkdown                2.20      2023-01-19 [1] CRAN (R 4.3.0)\n RSQLite                  2.3.0     2023-02-17 [1] CRAN (R 4.3.0)\n S4Vectors              * 0.37.4    2023-02-26 [1] Bioconductor\n scales                   1.2.1     2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo              1.2.2     2021-12-06 [1] CRAN (R 4.3.0)\n shiny                    1.7.4     2022-12-15 [1] CRAN (R 4.3.0)\n stringi                  1.7.12    2023-01-11 [1] CRAN (R 4.3.0)\n stringr                * 1.5.0     2022-12-02 [1] CRAN (R 4.3.0)\n tibble                 * 3.1.8     2022-07-22 [1] CRAN (R 4.3.0)\n tidyr                  * 1.3.0     2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect               1.2.0     2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse              * 2.0.0     2023-02-22 [1] CRAN (R 4.3.0)\n timechange               0.2.0     2023-01-11 [1] CRAN (R 4.3.0)\n tzdb                     0.3.0     2022-03-28 [1] CRAN (R 4.3.0)\n urlchecker               1.0.1     2021-11-30 [1] CRAN (R 4.3.0)\n usethis                  2.1.6     2022-05-25 [1] CRAN (R 4.3.0)\n utf8                     1.2.3     2023-01-31 [1] CRAN (R 4.3.0)\n vctrs                    0.5.2     2023-01-23 [1] CRAN (R 4.3.0)\n withr                    2.5.0     2022-03-03 [1] CRAN (R 4.3.0)\n xfun                     0.37      2023-01-31 [1] CRAN (R 4.3.0)\n xtable                   1.8-4     2019-04-21 [1] CRAN (R 4.3.0)\n XVector                  0.39.0    2022-12-20 [1] Bioconductor\n yaml                     2.3.7     2023-01-23 [1] CRAN (R 4.3.0)\n zlibbioc                 1.45.0    2022-12-20 [1] Bioconductor\n\n [1] /Users/jacques/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day4/Lecture7_ATAC.html",
    "href": "content/day4/Lecture7_ATAC.html",
    "title": "14  Lecture 7 - Advances in single-cell genomics: the epigenome",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/day4/Lab7_pseudotime.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\"><span class='chapter-number'>13</span>  <span class='chapter-title'>Lab 7: Pseudotime analyses</span></span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/day4/Lab8_atac-seq.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\"><span class='chapter-number'>15</span>  <span class='chapter-title'>Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html",
    "href": "content/day4/Lab8_atac-seq.html",
    "title": "\n15  Lab 8 - Single-cell ATAC-seq analysis workflow\n",
    "section": "",
    "text": "ATAC-seq data may be obtained in isolation using a single-cell ATAC-seq protocol (e.g. 10X scATACseq) or in combination with gene expression data using a single-cell multiome protocole (e.g. 10X multiome and SHARE-seq).\nSeveral packages are currently avaialble to process scATAC-seq data in R. These include [Signac](https://satijalab.org/signac/index.html) and [ArchR](https://www.archrproject.com/bookdown/index.html#section). This lab will closely follow the processing steps outlined in Signac, which interfaces well with Seurat for single-cell analysis.\nIn this lab, we will process a PBMC single-cell ATAC-seq (scATAC-seq) dataset and perform preliminary analysis to assess quality of these data. The data for this lab comes from 10X Genomics. The dataset contains roughly ~ 10,000 cells."
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html#process-human-pbmc-dataset",
    "href": "content/day4/Lab8_atac-seq.html#process-human-pbmc-dataset",
    "title": "\n15  Lab 8 - Single-cell ATAC-seq analysis workflow\n",
    "section": "\n15.1 Process human PBMC dataset",
    "text": "15.1 Process human PBMC dataset\n\n15.1.1 Download data\n\nDownload the files related to scATACseq of all human PBMC cells.\n\nData comes from 10X Genomics.\nDirect download links are provided below\n\n\n\nR\n\ndir.create('scATAC')\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\", \"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_peaks.bed\", \"scATAC/atac_v1_pbmc_10k_peaks.bed\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_singlecell.csv\", \"scATAC/atac_v1_pbmc_10k_singlecell.csv\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\")\n\n\n\n15.1.2 Import data\nNotice how the count matrix is in a .h5 format. We have already encountered this format in Lab3. Back then, we imported it with DropletUtils::read10xCounts.\n\nDoes this function work here?\n\n\n\n\nR\n\nDropletUtils::read10xCounts(\"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\n\n\nThis works because 10X Genomics make sure to distribute files in .h5 format that are consistent accross single-cell sequencing mthodologies. However, the SingleCellExperiment obtained with this approach is not the most convenient, as it cannot natively leverage fragments file (see below).\nInstead, we can create a Signac object, a flavour of Seurat objects.\n\nImport counts matrix and feature annotations using an import function provided by Seurat.\n\n\n\n\nR\n\nlibrary(Seurat)\nlibrary(Signac)\nlibrary(rtracklayer)\nlibrary(stringr)\ncnts <- Read10X_h5('scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5')\nfeatures <- import('scATAC/atac_v1_pbmc_10k_peaks.bed')\nfeatures$peak <- as.character(features) |> str_replace(':', '-')\nmetadata <- read.csv(\n  file = \"scATAC/atac_v1_pbmc_10k_singlecell.csv\",\n  header = TRUE,\n  row.names = 1\n)\n\n\n\nHow many accessible genomic segments were found in this dataset?\n\n\n\n\nR\n\nfeatures\nlength(features)\n\n\n\n15.1.3 Create a Seurat object\nThe next step is to aggregate counts and features into a ChromatinAssay, a scATAC-seq flavour of Seurat standard Assays. The documentation for ?CreateChromatinAssay indicates that the user can provide:\n\nA fragments file, corresponding to the full list of all unique fragments mapped across all single cells.\nGenomic annotations to the ChromatinAssay, corresponding to gene annotations, promoter positions, etc. Such annotations can be generated from Ensembl.\n\n\nGenerate human annotations from Ensembl using a parsing function from Seurat.\n\n\n\n\nR\n\n## - Get human gene annotations (hg19/GRCh37) to feed it into the future `ChromatinAssay`\nBiocManager::install('EnsDb.Hsapiens.v75')\nannotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75)\nseqlevelsStyle(annotations) <- 'UCSC'\n\n\n\nCreate a ChromatinAssay using counts, features, fragments and annotations.\n\n\n\n\nR\n\n## - Create Chromatin Assay\nassay <- Signac::CreateChromatinAssay(\n    counts = cnts,\n    ranges = features,\n    fragments = \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\",\n    annotation = annotations,\n    genome = \"hg19\",\n    min.cells = 10, \n    min.features = 10\n)\nassay\n\n\n\nWhat are the dimensions of this object? Are they comparable to the count matrix? Comment.\n\n\n\n\nR\n\ndim(cnts)\ndim(assay)\n\n\nIt’s finally time to wrap the ChromatinAssay into a Seurat standard object. This is done using the CreateSeuratObject, as already covered in Lab6\n\nCreate a PBMC Seurat object.\n\n\n\n\nR\n\n## - Create Seurat object\nPBMC <- Seurat::CreateSeuratObject(\n    counts = assay,\n    assay = 'ATAC', \n    meta.data = metadata[metadata$is__cell_barcode == 1, ]\n)\nPBMC\n\nPBMC[['ATAC']]\ngranges(PBMC)\nAnnotation(PBMC)\n\n\n\n15.1.4 Check QCs\n\n15.1.4.1 Cell-based QCs\nThe fraction of reads in peaks (FRiP) is a good indicator of how well each cell was handled during scATACseq processing.\n\n\n\nR\n\nPBMC@meta.data$FRiP <- PBMC$peak_region_fragments / PBMC$passed_filters\nPBMC@meta.data$nCount_ATAC <- colSums(GetAssayData(PBMC, slot = \"counts\"))\nPBMC@meta.data$nFeature_ATAC <- colSums(GetAssayData(PBMC, slot = \"counts\") > 0)\n\nquantile(PBMC$FRiP, seq(0, 1, 0.1))\nquantile(PBMC$nCount_ATAC, seq(0, 1, 0.1))\nquantile(PBMC$nFeature_ATAC, seq(0, 1, 0.1))\n\n\n\n15.1.4.2 Peaks-based QCs\n\nWhich analysis are the fragments required for, exactly?\nCould we still perform normalization/clustering/annotation without them? And motif enrichment analysis?\n\nSince we do have the fragments file at hand, most of the QC steps are available (e.g. TSSEnrichment, NucleosomeSignal or fragment size distribution). Let’s go through them one by one.\n\n\n\nR\n\n# compute nucleosome signal score per cell\nPBMC <- NucleosomeSignal(object = PBMC)\n\n# compute TSS enrichment score per cell\nPBMC <- Signac::TSSEnrichment(object = PBMC, fast = FALSE)\n\n\nThe TSSPlot function from Signac can be used to plot the fragment count per peak ~ TSS enrichment.\n\n\n\nR\n\nPBMC$high.tss <- ifelse(PBMC$TSS.enrichment > 3.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\nPBMC$high.tss <- ifelse(PBMC$TSS.enrichment > 2.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\n\n\nThe FragmentHistogram function from Signac can be used to plot the fragment size distribution in peaks with different nucleosome signals.\n\n\n\nR\n\nPBMC$nucleosome_group <- ifelse(PBMC$nucleosome_signal > 4, 'NS > 4', 'NS < 4')\nFragmentHistogram(object = PBMC, group.by = 'nucleosome_group')\n\n\nThe new DensityScatter function from Signac can be used to plot the fragment count per peak ~ TSS enrichment, combining both metrics into a single plot.\n\n\n\nR\n\np <- DensityScatter(PBMC, x = 'TSS.enrichment', y = 'nucleosome_signal', log_x = FALSE, quantiles = TRUE)\n\n\n\n15.1.5 Filter cells and features\nWe do have other pre-computed metrics (e.g. FRIP and depth).\n\nCheck these metrics and filter the Seurat object (cells and features) as deemed appropriate.\n\n\n\n\nR\n\n## - Filter data \nPBMC <- subset(PBMC, subset = nCount_ATAC > 3000 & nCount_ATAC < 100000) \nPBMC <- subset(PBMC, subset = nFeature_ATAC > 1000 & nFeature_ATAC < 20000) \nPBMC <- subset(PBMC, subset = FRIP > 0.30) \n## - Remove peaks with low coverage\nPBMC <- PBMC[rowSums(GetAssayData(PBMC, slot = \"counts\")) > 10, ]\nPBMC <- PBMC[rowSums(GetAssayData(PBMC, slot = \"counts\") > 0) > 10, ]\n\n\n\n15.1.6 Dimensionality reduction and clustering\n\nNow that the dataset is filtered, normalize (by using TF-IDF approach) then further reduce the dimensionality for visualization purposes.\n\n\n\n\nR\n\n## - Normalize data \nPBMC <- RunTFIDF(PBMC) \n\n## - Reduce dimensionality\nPBMC <- FindTopFeatures(PBMC, min.cutoff = 'q50') \nPBMC <- RunSVD(PBMC) \n\n## - Label clusters according to the original publication\nPBMC <- RunUMAP(object = PBMC, reduction = 'lsi', dims = 2:30)\nPBMC <- FindNeighbors(object = PBMC, reduction = 'lsi', dims = 2:30)\nPBMC <- FindClusters(object = PBMC, verbose = FALSE, algorithm = 3)\n\n## - Visualize data \np <- DimPlot(PBMC, label = TRUE) + NoLegend()\n\n\n\nWhat can you observe in the UMAP projection of the dataset? Comment on the separation of some cell types into different spatially-resolved clusters."
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html#chromvar-analysis",
    "href": "content/day4/Lab8_atac-seq.html#chromvar-analysis",
    "title": "\n15  Lab 8 - Single-cell ATAC-seq analysis workflow\n",
    "section": "\n15.2 chromVAR analysis",
    "text": "15.2 chromVAR analysis\n\n15.2.1 Get a SummarizedExperiment of scATACseq counts over peaks\nchromVAR works with raw counts stored as a RangedSummarizedExperiment. By now, you should be able to easily extract the raw counts from a specific Seurat assay. Store it in a RangedSummarizedExperiment (~ equivalent to Seurat assay but in Bioconductor).\n\nWhat are the dimensions of the RangedSummarizedExperiment generated? What are the features and what are the columns?\n\n\n\n\nR\n\nlibrary(SummarizedExperiment)\nsumExp <- SummarizedExperiment(\n    assays = list('counts' = GetAssayData(PBMC, assay = 'ATAC', slot = 'counts')), \n    rowRanges = GetAssayData(PBMC, assay = 'ATAC', slot = 'ranges'), \n    colData = PBMC[[]]\n)\ndim(sumExp)\n\n\n\n15.2.2 Add GC bias to peaks\nThis step is important to correct GC bias associated with each peak.\n\n\n\nR\n\nsumExp <- chromVAR::addGCBias(sumExp, genome = BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19)\n\n\n\n15.2.3 Map motifs over peaks\nUsing motifmatchr package, one can map a list of motifs (e.g. from JASPAR database) over a RangedSummarizedExperiment (or anything which can be coerced to a GRanges, actually).\n\nFirst, you need to import motifs from a public database in R. This can be done (among other ways) with the TFBSTools pacakge.\n\n\n\n\nR\n\n## - Import motifs from JASPAR database\nmotifs <- TFBSTools::getMatrixSet(\n    JASPAR2020::JASPAR2020,\n    list(species = 9606, all_versions = FALSE)\n)\nnames(motifs) <- TFBSTools::name(motifs)\n\n\n\nNow map the subset of motifs of interest to the filtered peaks, using motifmatchr::matchMotifs().\nRead matchMotifs() documentation and run it on your sumExp.\nWhat is the class of the generated object? Its dimensions?\nWhat are the features and what are the columns?\n\n\n\n\nR\n\nlibrary(BiocParallel)\nregister(MulticoreParam(workers = 16, progressbar = TRUE))\nmotif_mappings <- motifmatchr::matchMotifs(motifs, sumExp, genome = BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19)\nclass(motif_mappingss)\ndim(motif_mappings)\n\n\nBecause there are so many motifs and so many peaks, and in interest of time, we will perform chromVAR analysis on a subset of motifs only. You can manually filter the motifs list to motifs that may be relevant in our context (e.g. EOMES, or GATA2, …).\n\n\n\nR\n\n## - Filter to interesting motifs to keep analysis relatively quick\n#       Feel free to select any TF of interest!\nmotif_mappings_sub <- motif_mappings[, c('EOMES', 'GATA2', 'IRF8', 'EBF1', 'SPI1', 'TCF3', 'CEBPA')]\n\n\n\n15.2.4 Search for motifs with high deviation of mapping compared to background\nchromVAR’s computeDeviations() function combines (1) the peak counts / cell (stored here in sumExp) and (2) the TF mapping over each peak (stored here in motif_mappings). to assess the mapping deviation for each TF over each cell compared to other cells.\n\nRun computeDeviations() on the set of peaks and motifs.\nWhat is the class of the generated object? Its dimensions?\nWhat are the features and what are the columns?\n\n\n\n\nR\n\n## - Find background signal\nbg <- chromVAR::getBackgroundPeaks(object = sumExp)\n## - For each motif, compute its mapping deviation over the filtered peaks\nmotif_deviations <- chromVAR::computeDeviations(object = sumExp, annotations = motif_mappings_sub, background_peaks = bg)\n\n\n\n15.2.5 Check TF motif enrichment in different cell types\nThe motif_deviations object can be added as a new assay to the PBMC Seurat object. This way, one can rely on Seurat-based plotting functions to plot cells in their preferred dimensional space, and color them using motif deviation scores computed with chromVAR.\n\n\n\nR\n\nPBMC[['MOTIF']] <- Seurat::CreateAssayObject(counts = chromVAR::deviationScores(motif_deviations))\nDefaultAssay(PBMC) <- 'MOTIF'\nlist_p <- lapply(rownames(PBMC), function(motif) {\n    FeaturePlot(PBMC, features = motif, reduction = \"umap\") + \n        scale_colour_gradientn(\n            colors = c('#190886', '#6F07F8', '#F954A5', '#FF9D66', '#edf118'),\n            limits = c(-5, 5), oob = scales::squish\n        ) + \n        theme(aspect.ratio = 1)\n})\nlist_p[[length(list_p) + 1]] <- DimPlot(PBMC, group.by = 'renamed_clusters', reduction = \"umap\") + theme(aspect.ratio = 1)\np <- cowplot::plot_grid(plotlist = list_p)"
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html#compute-gene-activity-scores",
    "href": "content/day4/Lab8_atac-seq.html#compute-gene-activity-scores",
    "title": "\n15  Lab 8 - Single-cell ATAC-seq analysis workflow\n",
    "section": "\n15.3 Compute gene activity scores",
    "text": "15.3 Compute gene activity scores\nSignac’s GeneActivity() function require scATACseq fragment information. Since we have them, we can estimate a gene activity score for each gene in the annotations.\n\n\n\nR\n\ngene.activities <- GeneActivity(PBMC)\n\n\nWe can now save this new object as an Assay in the PBMC object and normalize it.\n\n\n\nR\n\nPBMC[['RNA']] <- CreateAssayObject(counts = gene.activities)\n\n# - Normalize the new RNA assay, this time with `SCTransform`\nPBMC <- SCTransform(\n  object = PBMC,\n  assay = 'RNA',\n)\n\nPBMC\nDefaultAssay(PBMC) <- \"SCT\"\n\n\nOne can now perform “gene differential expression”-like analysis using the SCT assay!\n\n\n\nR\n\n## - Reduce dimensionality to visualize cells in 2D\nPBMC <- RunPCA(PBMC) |> RunUMAP(reduction = 'pca', dims = 1:50)\n\n## - Plot gene expression \np <- FeaturePlot(PBMC, features = 'MS4A1', reduction = \"umap\") # Or NCR1 (NKp46), CD8A, CD14, MS4A1\n\n\nNow, we can leverage this to annotate clusters according to known PBMC markers\n\n\n\nR\n\n## - Reduce dimensionality to visualize cells in 2D\nPBMC <- RunPCA(PBMC) |> RunUMAP(reduction = 'pca', dims = 1:50)\n\n## - Plot gene expression \np <- FeaturePlot(PBMC, features = 'MS4A1', reduction = \"umap\") # Or NCR1 (NKp46), CD8A, CD14, MS4A1"
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html#find-differentially-accessible-peaks",
    "href": "content/day4/Lab8_atac-seq.html#find-differentially-accessible-peaks",
    "title": "\n15  Lab 8 - Single-cell ATAC-seq analysis workflow\n",
    "section": "\n15.4 Find differentially accessible peaks",
    "text": "15.4 Find differentially accessible peaks\n\n\n\nR\n\n# change back to working with peaks instead of gene activities\nDefaultAssay(pbmc) <- 'peaks'\n\nda_peaks <- FindMarkers(\n  object = pbmc,\n  ident.1 = \"CD4 Naive\",\n  ident.2 = \"CD14+ Monocytes\",\n  test.use = 'LR',\n  latent.vars = 'nCount_peaks'\n)\n\n\n\nplot1 <- VlnPlot(\n  object = pbmc,\n  features = rownames(da_peaks)[1],\n  pt.size = 0.1,\n  idents = c(\"CD4 Naive\",\"CD14+ Monocytes\")\n)\nplot2 <- FeaturePlot(\n  object = pbmc,\n  features = rownames(da_peaks)[1],\n  pt.size = 0.1\n)\n\nplot1 | plot2"
  },
  {
    "objectID": "content/day5/Lecture8_spatial-transcriptomics.html",
    "href": "content/day5/Lecture8_spatial-transcriptomics.html",
    "title": "16  Lecture 8 - Advances in single-cell genomics: spatial transcriptomics",
    "section": "",
    "text": "<div id=\"quarto-navigation-envelope\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\">Single-cell RNAseq analysis with R/Bioconductor</span> <span class=\"hidden\" data-render-id=\"quarto-int-next\">Extra resources</span> <span class=\"hidden\" data-render-id=\"quarto-int-prev\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\">Welcome</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\">Program</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\">RStudio</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\">Prerequisites</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\">Day 1</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"><span class=\"chapter-number\">1</span>  <span class=\"chapter-title\">Lecture 1 - Introduction to scRNAseq analysis</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"><span class=\"chapter-number\">2</span>  <span class=\"chapter-title\">Lecture 2 - From sequencing reads to expression matrices</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"><span class=\"chapter-number\">3</span>  <span class=\"chapter-title\">Lab 1: Familiarizing yourself with the course AWS instance</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"><span class=\"chapter-number\">4</span>  <span class=\"chapter-title\">Lab 2: From .bcl to count matrix</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\">Day 2</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"><span class=\"chapter-number\">5</span>  <span class=\"chapter-title\">Lecture 3 - Quality control for scRNA-Seq data</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"><span class=\"chapter-number\">6</span>  <span class=\"chapter-title\">Lab 3: Introduction to R/Bioconductor</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"><span class=\"chapter-number\">7</span>  <span class=\"chapter-title\">Lab 4 - Single-cell RNA-seq data wrangling</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\">Day 3</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"><span class=\"chapter-number\">8</span>  <span class=\"chapter-title\">Lecture 4 - Identifying cell populations</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"><span class=\"chapter-number\">9</span>  <span class=\"chapter-title\">Lab 5: Dimension reduction, clustering and annotation</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"><span class=\"chapter-number\">10</span>  <span class=\"chapter-title\">Lecture 5 - Data integration and batch effect correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"><span class=\"chapter-number\">11</span>  <span class=\"chapter-title\">Lab 6 - Batch correction</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\">Day 4</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"><span class=\"chapter-number\">12</span>  <span class=\"chapter-title\">Lecture 6 - Trajectories and pseudotimes</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"><span class=\"chapter-number\">13</span>  <span class=\"chapter-title\">Lab 7: Pseudotime analyses</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"><span class=\"chapter-number\">14</span>  <span class=\"chapter-title\">Lecture 7 - Advances in single-cell genomics: the epigenome</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"><span class=\"chapter-number\">15</span>  <span class=\"chapter-title\">Lab 8 - Single-cell ATAC-seq analysis workflow</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\">Day 5</span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"><span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\">Extra resources</span> <span class=\"hidden\" data-render-id=\"footer-left\">Single-cell RNAseq analysis with R/Bioconductor |<br />\nJ. Serizay O. Ashenberg</span> <span class=\"hidden\" data-render-id=\"footer-right\">This book was built with <a href=\"https://quarto.org/\">Quarto</a>.</span></p>\n</div>\n<div id=\"quarto-meta-markdown\" class=\"hidden\">\n<p><span class=\"hidden\" data-render-id=\"quarto-metatitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\">Single-cell RNAseq analysis with R/Bioconductor - <span class=\"chapter-number\">16</span>  <span class=\"chapter-title\">Lecture 8 - Advances in single-cell genomics: spatial transcriptomics</span></span> <span class=\"hidden\" data-render-id=\"quarto-metasitename\">Single-cell RNAseq analysis with R/Bioconductor</span></p>\n</div>\n\n</main> <!-- /main -->\n<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n<nav class=\"page-navigation\">\n  <div class=\"nav-page nav-page-previous\">\n      <a  href=\"/content/day4/Lab8_atac-seq.html\" class=\"pagination-link\">\n        <i class=\"bi bi-arrow-left-short\"></i> <span class=\"nav-page-text\"><span class='chapter-number'>15</span>  <span class='chapter-title'>Lab 8 - Single-cell ATAC-seq analysis workflow</span></span>\n      </a>          \n  </div>\n  <div class=\"nav-page nav-page-next\">\n      <a  href=\"/content/extra.html\" class=\"pagination-link\">\n        <span class=\"nav-page-text\">Extra resources</span> <i class=\"bi bi-arrow-right-short\"></i>\n      </a>\n  </div>\n</nav>\n</div> <!-- /content -->\n<footer class=\"footer\">\n  <div class=\"nav-footer\">\n    <div class=\"nav-footer-left\">\n      <div class='footer-contents'>Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay O. Ashenberg\n</div>  \n    </div>   \n    <div class=\"nav-footer-right\">\n      <div class='footer-contents'>This book was built with <a href=\"https://quarto.org/\">Quarto</a>.\n</div>  \n    </div>\n  </div>\n</footer>\n\n</body>\n\n</html>"
  },
  {
    "objectID": "content/extra.html",
    "href": "content/extra.html",
    "title": "Extra resources",
    "section": "",
    "text": "Analyzing NGS data can be a complex process, especially with the rise of multi-omics approaches. Here is a list of resources we thought would be useful for people interested in going deeper in the analysis of NGS data."
  },
  {
    "objectID": "content/extra.html#general-bioinformatics",
    "href": "content/extra.html#general-bioinformatics",
    "title": "Extra resources",
    "section": "General bioinformatics",
    "text": "General bioinformatics\n\nA comprehensive overview of the different types of bioinformatic analyses, divided in 4 fundamental modules: LINK"
  },
  {
    "objectID": "content/extra.html#rbioconductor",
    "href": "content/extra.html#rbioconductor",
    "title": "Extra resources",
    "section": "R/Bioconductor",
    "text": "R/Bioconductor\n\nThe excellent R guide for beginners, by Emmanuel Paradis: PDF\nThe 150+ pages comprehensive book to learn everything about Bioconductor. This ebook has been published by Kasper D. Hansen and is freely available under the CC BY-NC-SA 4.0 license: Link to EPUB"
  },
  {
    "objectID": "content/extra.html#scientific-readings",
    "href": "content/extra.html#scientific-readings",
    "title": "Extra resources",
    "section": "Scientific readings",
    "text": "Scientific readings\n\n2014 Nat. Methods paper from Bioconductor core team describing important object classes\nTo see from how far Bioc comes from..."
  }
]